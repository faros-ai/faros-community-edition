name: CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Check for style & bugs
        uses: ludeeus/action-shellcheck@1.1.0
        with:
          ignore: wait-for
        env:
          SHELLCHECK_OPTS: -s bash -e SC2162 -e SC2153

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Build
        run: npm ci --unsafe-perm
        working-directory: init

      - name: Run unit tests
        run: npm run test:unit -- --coverage
        working-directory: init

      - name: Docker Compose version
        run: docker-compose version --short

      - name: Start services
        run: docker-compose up --quiet-pull -d

      - name: Show logs
        run: docker-compose logs --tail all

      - name: Show services
        run: docker-compose ps -a

      - name: Wait for init to complete
        run: docker wait faros-community-edition_faros-init_1

      - name: Get destination id & Hasura Admin Secret
        run: |
          echo "DESTINATION_ID=$(cat ${{ github.workspace }}/init/resources/airbyte/workspace/airbyte_config/DESTINATION_CONNECTION.yaml | yq '.[0].destinationId')" >> "$GITHUB_ENV"
          echo $(cat .env | grep "^HASURA_GRAPHQL_ADMIN_SECRET") >> "$GITHUB_ENV"

      - name: Run integration tests
        run: npm run test:integration -- --coverage
        working-directory: init

      - name: Stop services
        run: docker-compose down

  publish-docker:
    name: Publish Docker
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: test
    if: github.ref == 'refs/heads/main' # Skip PRs

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            farosai/faros-ce-init
          tags: |
            type=sha,format=long,prefix=

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

