---
- sourceDefinitionId: "00405b19-9768-4e0c-b1ae-9fc2ee2b2a8c"
  name: "Looker"
  dockerRepository: "airbyte/source-looker"
  dockerImageTag: "0.2.6"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/looker"
  icon: "looker.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/looker"
    connectionSpecification:
      type: "object"
      title: "Looker Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "domain"
      - "client_id"
      - "client_secret"
      properties:
        domain:
          type: "string"
          title: "Domain"
          examples:
          - "domainname.looker.com"
          - "looker.clientname.com"
          - "123.123.124.123:8000"
          description: "Domain for your Looker account, e.g. airbyte.cloud.looker.com,looker.[clientname].com,IP\
            \ address"
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Client ID is first part of an API3 key that is specific\
            \ to each Looker user. See the <a href=\"https://docs.airbyte.io/integrations/sources/looker\"\
            >docs</a> for more information on how to generate this key."
        run_look_ids:
          type: "array"
          items:
            type: "string"
            pattern: "^[0-9]*$"
          title: "Look IDs to Run"
          description: "The IDs of any Looks to run (optional)"
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "The Client Secret is second part of an API3 key."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "008b2e26-11a3-11ec-82a8-0242ac130003"
  name: "Commercetools"
  dockerRepository: "airbyte/source-commercetools"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/commercetools"
  icon: "commercetools.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/commercetools"
    connectionSpecification:
      type: "object"
      title: "Commercetools Source CDK Specifications"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "region"
      - "start_date"
      - "host"
      - "project_key"
      - "client_id"
      - "client_secret"
      properties:
        host:
          enum:
          - "gcp"
          - "aws"
          type: "string"
          description: "The cloud provider your shop is hosted. See: https://docs.commercetools.com/api/authorization"
        region:
          type: "string"
          examples:
          - "us-central1"
          - "australia-southeast1"
          description: "The region of the platform."
        client_id:
          type: "string"
          description: "Id of API Client."
          airbyte_secret: true
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "The date you would like to replicate data. Format: YYYY-MM-DD."
        project_key:
          type: "string"
          description: "The project key"
        client_secret:
          type: "string"
          description: "The password of secret of API Client."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "010eb12f-837b-4685-892d-0a39f76a98f5"
  name: "Facebook Pages"
  dockerRepository: "airbyte/source-facebook-pages"
  dockerImageTag: "0.1.6"
  documentationUrl: "https://hub.docker.com/r/airbyte/source-facebook-pages"
  icon: "facebook.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/facebook-pages"
    connectionSpecification:
      type: "object"
      title: "Facebook Pages Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "access_token"
      - "page_id"
      properties:
        page_id:
          type: "string"
          title: "Page ID"
          description: "Page ID"
        access_token:
          type: "string"
          title: "Page Access Token"
          description: "Facebook Page Access Token"
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "05f9f7d4-d900-4ebd-89fc-abcce64e342b"
  name: "Agile Accelerator"
  dockerRepository: "farosai/airbyte-agileaccelerator-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/agileaccelerator-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "AgileAccelerator Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "server_url"
      - "client_id"
      - "client_secret"
      - "username"
      - "password"
      - "api_token"
      - "cutoff_days"
      properties:
        password:
          type: "string"
          title: "Password"
          description: "AgileAccelerator password"
          airbyte_secret: true
        username:
          type: "string"
          title: "Username"
          description: "AgileAccelerator username"
        api_token:
          type: "string"
          title: "API Token"
          description: "To get token use URL: $SERVER_URL/lightning/settings/personal/ResetApiToken/home"
          airbyte_secret: true
        client_id:
          type: "string"
          title: "Client ID"
          description: "1. From Setup, enter App Manager in the Quick Find box, and\
            \ then select App Manager. 2. Click the dropdown menu for the connected\
            \ app that you created, and select View. 3. If the values for the Consumer\
            \ Key and Consumer Secret fields are hidden, click Click to reveal. 4.\
            \ Copy the Consumer Key and Consumer Secret values and save them for later\
            \ use in this quick start."
        page_size:
          type: "integer"
          title: "Page Size"
          description: "Page size to use when requesting records from AgileAccelerator\
            \ API"
        server_url:
          type: "string"
          title: "Server URL"
          example:
          - "https://test.my.salesforce.com"
          description: "The API URL for fetching data from AgileAccelerator"
        api_version:
          type: "string"
          title: "API Version"
          default: "v53.0"
          description: "AgileAccelerator API Version"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "Same as client_id"
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "0b5c867e-1b12-4d02-ab74-97b2184ff6d7"
  name: "Dixa"
  dockerRepository: "airbyte/source-dixa"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/dixa"
  icon: "dixa.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/dixa"
    connectionSpecification:
      type: "object"
      title: "Dixa Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_token"
      - "start_date"
      properties:
        api_token:
          type: "string"
          description: "Dixa API token"
          airbyte_secret: true
        batch_size:
          type: "integer"
          default: 31
          pattern: "^[0-9]{1,2}$"
          examples:
          - 1
          - 31
          description: "Number of days to batch into one request. Max 31."
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "YYYY-MM-DD"
          description: "The connector pulls records updated from this date onwards."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "0eba3d46-6b9f-48de-baf5-63632f5eca50"
  name: "Faros Feeds"
  dockerRepository: "farosai/airbyte-faros-feeds-source"
  dockerImageTag: "latest"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Faros Feeds Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "feed_cfg"
      properties:
        debug:
          type: "boolean"
          order: 2
          title: "Enable debug logs"
        feed_cfg:
          type: "object"
          oneOf:
          - type: "object"
            title: "github"
            properties:
              feed_name:
                type: "string"
                const: "github-feed"
              feed_path:
                type: "string"
                const: "vcs/github-feed"
              cutoff_days:
                type: "integer"
                order: 2
                title: "Cutoff days"
                description: "Only fetch commits, issues and pull requests updated\
                  \ in the last number of days"
              repositories:
                type: "array"
                items:
                  type: "string"
                order: 0
                title: "GitHub Repositories"
                examples:
                - "apache/kafka"
                - "airbytehq/airbyte"
                description: "GitHub organization/repository"
              personal_access_token:
                type: "string"
                order: 1
                title: "Personal Access Token"
                airbyte_secret: true
          order: 0
          title: "Feed Type"
          description: "Choose your Feed Type"
        feed_args:
          type: "array"
          items:
            type: "string"
          order: 1
          title: "Feed command line arguments"
          examples:
          - "--expiration '5 seconds'"
          description: "Additional command line arguments to invoke the feed with"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "12928b32-bf0a-4f1e-964f-07e12e37153a"
  name: "Mixpanel"
  dockerRepository: "airbyte/source-mixpanel"
  dockerImageTag: "0.1.9"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/mixpanel"
  icon: "mixpanel.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mixpanel"
    connectionSpecification:
      type: "object"
      title: "Source Mixpanel Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_secret"
      properties:
        region:
          enum:
          - "US"
          - "EU"
          type: "string"
          title: "Region"
          default: "US"
          description: "The region of mixpanel domain instance either US or EU."
        api_secret:
          type: "string"
          title: "API Secret"
          description: "Mixpanel API Secret. See the <a href=\"https://docs.airbyte.io/integrations/sources/mixpanel\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$"
          examples:
          - "2021-11-16"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated. If this option is not\
            \ set, the connector will replicate data from up to one year ago by default."
        project_timezone:
          type: "string"
          title: "Project Timezone"
          default: "US/Pacific"
          examples:
          - "US/Pacific"
          - "UTC"
          description: "Time zone in which integer date times are stored. The project\
            \ timezone may be found in the project settings in the Mixpanel console."
        attribution_window:
          type: "integer"
          title: "Attribution Window"
          default: 5
          description: " A period of time for attributing results to ads and the lookback\
            \ period after those actions occur during which ad results are counted.Default\
            \ attribution window is 5 days."
        select_properties_by_default:
          type: "boolean"
          title: "Select Properties By Default"
          default: true
          description: "Setting this config parameter to TRUE ensures that new properties\
            \ on events and engage records are captured. Otherwise new properties\
            \ will be ignored"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "137ece28-5434-455c-8f34-69dc3782f451"
  name: "LinkedIn Ads"
  dockerRepository: "airbyte/source-linkedin-ads"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/linkedin-ads"
  icon: "linkedin.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/linkedin-ads"
    connectionSpecification:
      type: "object"
      title: "Linkedin Ads Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-05-17"
          description: "UTC date in the format 2020-09-17. Any data before this date\
            \ will not be replicated."
        account_ids:
          type: "array"
          items:
            type: "integer"
          title: "Account IDs"
          default: []
          description: "Specify the Account IDs separated by space, to pull the data\
            \ from. Leave empty, if you want to pull the data from all associated\
            \ accounts."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of the LinkedIn Ads developer application."
                airbyte_secret: true
              auth_method:
                type: "string"
                const: "oAuth2.0"
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret the LinkedIn Ads developer application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "The key to refresh the expired Access Token."
                airbyte_secret: true
          - type: "object"
            title: "Access Token"
            required:
            - "access_token"
            properties:
              auth_method:
                type: "string"
                const: "access_token"
              access_token:
                type: "string"
                title: "Access Token"
                description: "The token value generated using Authentication Code."
                airbyte_secret: true
          title: "Authorization Method"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "14c6e7ea-97ed-4f5e-a7b5-25e9a80b8212"
  name: "Airtable"
  dockerRepository: "airbyte/source-airtable"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/airtable"
  icon: "airtable.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/airtable"
    connectionSpecification:
      type: "object"
      title: "Airtable Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "base_id"
      - "tables"
      properties:
        tables:
          type: "array"
          items:
            type: "string"
          title: "Tables"
          examples:
          - "table 1"
          - "table 2"
          description: "The list of Tables to integrate."
        api_key:
          type: "string"
          title: "API Key"
          examples:
          - "key1234567890"
          description: "The API Key for the Airtable account. See the <a href=\"https://support.airtable.com/hc/en-us/articles/219046777-How-do-I-get-my-API-key-\"\
            >Support Guide</a> for more information on how to obtain this key."
          airbyte_secret: true
        base_id:
          type: "string"
          title: "Base ID"
          examples:
          - "app1234567890"
          description: "The Base ID to integrate the data from. You can find the Base\
            \ ID following the link <a href=\"https://airtable.com/api\">Airtable\
            \ API</a>, log in to your account, select the base you need and find Base\
            \ ID in the docs."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "172cc5e1-9443-4f1b-a386-5a7813e05f45"
  name: "Datadog"
  dockerRepository: "farosai/airbyte-datadog-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/datadog-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Datadog Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "application_key"
      properties:
        api_key:
          type: "string"
          order: 0
          title: "Datadog API Key"
          airbyte_secret: true
        page_size:
          type: "integer"
          order: 2
          title: "Page Size"
          default: 100
          description: "used when retrieving paginated data from Datadog"
        application_key:
          type: "string"
          order: 1
          title: "Datadog Application Key"
          description: "requires incident_read authorization scope"
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "193bdcb8-1dd9-48d1-aade-91cadfd74f9b"
  name: "Paystack"
  dockerRepository: "airbyte/source-paystack"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/paystack"
  icon: "paystack.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/paystack"
    connectionSpecification:
      type: "object"
      title: "Paystack Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "secret_key"
      - "start_date"
      properties:
        secret_key:
          type: "string"
          title: "Secret Key"
          pattern: "^(s|r)k_(live|test)_[a-zA-Z0-9]+$"
          description: "The Paystack API key (usually starts with 'sk_live_'; find\
            \ yours <a href=\"https://dashboard.paystack.com/#/settings/developer\"\
            >here</a>)."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        lookback_window_days:
          type: "integer"
          title: "Lookback Window (in days)"
          default: 0
          minimum: 0
          description: "When set, the connector will always reload data from the past\
            \ N days, where N is the value set here. This is useful if your data is\
            \ updated after creation."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "1946c092-4aed-4b81-8a3a-c73e8a3802b5"
  name: "Datadog"
  dockerRepository: "farosai/airbyte-datadog-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/datadog-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Datadog Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "application_key"
      properties:
        api_key:
          type: "string"
          order: 0
          title: "Datadog API Key"
          airbyte_secret: true
        page_size:
          type: "integer"
          order: 2
          title: "Page Size"
          default: 100
          description: "used when retrieving paginated data from Datadog"
        application_key:
          type: "string"
          order: 1
          title: "Datadog Application Key"
          description: "requires incident_read authorization scope"
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "1b22f335-f5bb-442d-a345-38b860baa41d"
  name: "OpsGenie"
  dockerRepository: "farosai/airbyte-opsgenie-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/opsgenie-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "opsGenie Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "cutoff_days"
      properties:
        api_key:
          type: "string"
          title: "API key"
          description: "In order to create key, go to https://.{your_acount}.app.opsgenie.com/settings/api-key-management"
          airbyte_secret: true
        page_size:
          type: "number"
          title: "Page size"
          default: 10
          description: "used when retrieving paginated data from OpsGenie"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch incidents created after cutoff"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "1d4fdb25-64fc-4569-92da-fcdca79a8372"
  name: "Okta"
  dockerRepository: "airbyte/source-okta"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/okta"
  icon: "okta.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/okta"
    connectionSpecification:
      type: "object"
      title: "Okta Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "base_url"
      properties:
        token:
          type: "string"
          title: "API Token"
          description: "A Okta token. See the <a href=\"https://docs.airbyte.io/integrations/sources/okta\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        base_url:
          type: "string"
          title: "Base URL"
          description: "The Okta base URL."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "200330b2-ea62-4d11-ac6d-cfe3e3f8ab2b"
  name: "Snapchat Marketing"
  dockerRepository: "airbyte/source-snapchat-marketing"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/snapchat-marketing"
  icon: "snapchat.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/snapchat-marketing"
    connectionSpecification:
      type: "object"
      title: "Snapchat Marketing Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      properties:
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Client ID of your Snapchat developer application."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          default: "1970-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "The Client Secret of your Snapchat developer application."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "Refresh Token to renew the expired Access Token."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "253487c0-2246-43ba-a21f-5116b20a2c50"
  name: "Google Ads"
  dockerRepository: "airbyte/source-google-ads"
  dockerImageTag: "0.1.20"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/google-ads"
  icon: "google-adwords.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-ads"
    connectionSpecification:
      type: "object"
      title: "Google Ads Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "credentials"
      - "start_date"
      - "customer_id"
      properties:
        start_date:
          type: "string"
          order: 2
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2017-01-25"
          description: "UTC date and time in the format 2017-01-25. Any data before\
            \ this date will not be replicated."
        credentials:
          type: "object"
          order: 0
          title: "Google Credentials"
          required:
          - "developer_token"
          - "client_id"
          - "client_secret"
          - "refresh_token"
          properties:
            client_id:
              type: "string"
              title: "Client Id"
              description: "Google client id. More instruction on how to find this\
                \ value in our <a href=\"https://docs.airbyte.io/integrations/sources/google-adwords#setup-guide\"\
                >docs</a>"
            access_token:
              type: "string"
              title: "Access Token"
              description: "Access token generated using developer_token, oauth_client_id,\
                \ and oauth_client_secret. More instruction on how to find this value\
                \ in our <a href=\"https://docs.airbyte.io/integrations/sources/google-adwords#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
            client_secret:
              type: "string"
              title: "Client Secret"
              description: "Google client secret. More instruction on how to find\
                \ this value in our <a href=\"https://docs.airbyte.io/integrations/sources/google-adwords#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
            refresh_token:
              type: "string"
              title: "Refresh Token"
              description: "Refresh token generated using developer_token, oauth_client_id,\
                \ and oauth_client_secret. More instruction on how to find this value\
                \ in our <a href=\"https://docs.airbyte.io/integrations/sources/google-adwords#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
            developer_token:
              type: "string"
              title: "Developer Token"
              description: "Developer token granted by Google to use their APIs. More\
                \ instruction on how to find this value in our <a href=\"https://docs.airbyte.io/integrations/sources/google-adwords#setup-guide\"\
                >docs</a>"
              airbyte_secret: true
        customer_id:
          type: "string"
          order: 1
          title: "Customer ID"
          description: "Customer id must be specified as a 10-digit number without\
            \ dashes. More instruction on how to find this value in our <a href=\"\
            https://docs.airbyte.io/integrations/sources/google-adwords#setup-guide\"\
            >docs</a>. Metrics streams like AdGroupAdReport cannot be requested for\
            \ a manager account."
        custom_queries:
          type: "array"
          items:
            type: "object"
            properties:
              query:
                type: "string"
                title: "Custom query"
                examples:
                - "SELECT segments.ad_destination_type, campaign.advertising_channel_sub_type\
                  \ FROM campaign WHERE campaign.status = 'PAUSED'"
                description: "A custom defined GAQL query for building the report.\
                  \ Should not contain segments.date expression as it used by incremental\
                  \ streams"
              table_name:
                type: "string"
                title: "Destination table name"
                description: "The table name in your destination database for choosen\
                  \ query."
          order: 3
          title: "Custom GAQL Queries (Optional)"
        login_customer_id:
          type: "string"
          order: 4
          title: "Login Customer ID for Managed Accounts (Optional)"
          description: "If your access to the customer account is through a manager\
            \ account, this field is required and must be set to the customer ID of\
            \ the manager account (10-digit number without dashes). More information\
            \ about this field you can see <a href=\"https://developers.google.com/google-ads/api/docs/concepts/call-structure#cid\"\
            >here</a>"
        conversion_window_days:
          type: "integer"
          order: 5
          title: "Conversion Window (Optional)"
          default: 14
          maximum: 1095
          minimum: 0
          examples:
          - 14
          description: "Define the historical replication lookback window in days"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        - - "developer_token"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- sourceDefinitionId: "29b409d9-30a5-4cc8-ad50-886eb846fea3"
  name: "Quickbooks"
  dockerRepository: "airbyte/source-quickbooks-singer"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/quickbooks"
  icon: "qb.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "Source Quickbooks Singer Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "realm_id"
      - "user_agent"
      - "start_date"
      - "sandbox"
      properties:
        sandbox:
          type: "boolean"
          title: "Sandbox"
          default: false
          description: "Determines whether to use the sandbox or production environment."
        realm_id:
          type: "string"
          title: "Realm ID"
          description: "Labeled Company ID. The Make API Calls panel is populated\
            \ with the realm id and the current access token."
          airbyte_secret: true
        client_id:
          type: "string"
          title: "Client ID"
          description: "Identifies which app is making the request. Obtain this value\
            \ from the Keys tab on the app profile via My Apps on the developer site.\
            \ There are two versions of this key: development and production."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-03-20T00:00:00Z"
          description: "The default value to use if no bookmark exists for an endpoint\
            \ (rfc3339 date string). E.g, 2021-03-20T00:00:00Z. Any data before this\
            \ date will not be replicated."
        user_agent:
          type: "string"
          title: "User Agent"
          description: "Process and email for API logging purposes. Example: tap-quickbooks\
            \ <api_user_email@your_company.com>."
        client_secret:
          type: "string"
          title: "Client Secret"
          description: " Obtain this value from the Keys tab on the app profile via\
            \ My Apps on the developer site. There are two versions of this key: development\
            \ and production."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "A token used when refreshing the access token."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "2af123bf-0aaf-4e0d-9784-cb497f23741a"
  name: "Appstore"
  dockerRepository: "airbyte/source-appstore-singer"
  dockerImageTag: "0.2.6"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/appstore"
  icon: "appstore.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/appstore"
    connectionSpecification:
      type: "object"
      title: "Source Appstore Singer Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "key_id"
      - "private_key"
      - "issuer_id"
      - "vendor"
      - "start_date"
      properties:
        key_id:
          type: "string"
          title: "Key ID"
          description: "Appstore Key ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\"\
            >docs</a> for more information on how to obtain this key."
        vendor:
          type: "string"
          title: "Vendor ID"
          description: "Appstore Vendor ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\"\
            >docs</a> for more information on how to obtain this ID."
        issuer_id:
          type: "string"
          title: "Issuer ID"
          description: "Appstore Issuer ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\"\
            >docs</a> for more information on how to obtain this ID."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-11-16T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        private_key:
          type: "string"
          title: "Private Key"
          multiline: true
          description: "Appstore Private Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "2e875208-0c0b-4ee4-9e92-1cb3156ea799"
  name: "Iterable"
  dockerRepository: "airbyte/source-iterable"
  dockerImageTag: "0.1.15"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/iterable"
  icon: "iterable.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/iterable"
    connectionSpecification:
      type: "object"
      title: "Iterable Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "api_key"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: "Iterable API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/iterable\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-04-01T00:00:00Z"
          description: "The date from which you'd like to replicate data for Iterable,\
            \ in the format YYYY-MM-DDT00:00:00Z. All data generated after this date\
            \ will be replicated."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "2fed2292-5586-480c-af92-9944e39fe12d"
  name: "Short.io"
  dockerRepository: "airbyte/source-shortio"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/shortio"
  icon: "short.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://developers.short.io/reference"
    connectionSpecification:
      type: "object"
      title: "Shortio Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "domain_id"
      - "secret_key"
      - "start_date"
      properties:
        domain_id:
          type: "string"
          title: "Domain ID"
          desciprtion: "Short.io Domain ID"
          airbyte_secret: false
        secret_key:
          type: "string"
          title: "Secret Key"
          description: "Short.io Secret Key"
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
          airbyte_secret: false
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "325e0640-e7b3-4e24-b823-3361008f603f"
  name: "Zendesk Sunshine"
  dockerRepository: "airbyte/source-zendesk-sunshine"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-sunshine"
  icon: "zendesk.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk_sunshine"
    connectionSpecification:
      type: "object"
      title: "Zendesk Sunshine Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "subdomain"
      properties:
        subdomain:
          type: "string"
          title: "Subdomain"
          description: "The subdomain for your Zendesk Account."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-01T00:00:00Z"
          description: "The date from which you'd like to replicate data for Zendesk\
            \ Sunshine API, in the format YYYY-MM-DDT00:00:00Z."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "auth_method"
            - "client_id"
            - "client_secret"
            - "access_token"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your OAuth application."
                airbyte_secret: true
              auth_method:
                enum:
                - "oauth2.0"
                type: "string"
                const: "oauth2.0"
                order: 0
                default: "oauth2.0"
              access_token:
                type: "string"
                title: "Access Token"
                description: "Long-term access Token for making authenticated requests."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your OAuth application."
                airbyte_secret: true
          - type: "object"
            title: "API Token"
            required:
            - "auth_method"
            - "api_token"
            - "email"
            properties:
              email:
                type: "string"
                title: "Email"
                description: "The user email for your Zendesk account"
              api_token:
                type: "string"
                title: "API Token"
                description: "API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/zendesk_sunshine\"\
                  >docs</a> for information on how to generate this key."
                airbyte_secret: true
              auth_method:
                enum:
                - "api_token"
                type: "string"
                const: "api_token"
                order: 1
                default: "api_token"
          title: "Authorization Method"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "auth_method"
      predicate_value: "oauth2.0"
      oauth_config_specification:
        oauth_user_input_from_connector_config_specification:
          type: "object"
          properties:
            subdomain:
              type: "string"
              path_in_connector_config:
              - "subdomain"
          additionalProperties: false
        complete_oauth_output_specification:
          type: "object"
          properties:
            access_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "access_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "3490c201-5d95-4783-b600-eaf07a4c7787"
  name: "Outreach"
  dockerRepository: "airbyte/source-outreach"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/outreach"
  icon: "outreach.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/outreach"
    connectionSpecification:
      type: "object"
      title: "Source Outreach Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "redirect_uri"
      - "start_date"
      properties:
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Client ID of your Outreach developer application."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-11-16T00:00:00Z"
          description: "The date from which you'd like to replicate data for Outreach\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
        redirect_uri:
          type: "string"
          title: "Redirect URI"
          description: "A Redirect URI is the location where the authorization server\
            \ sends the user once the app has been successfully authorized and granted\
            \ an authorization code or access token."
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "The Client Secret of your Outreach developer application."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "The token for obtaining the new access token."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "36c891d9-4bd9-43ac-bad2-10e12756272c"
  name: "HubSpot"
  dockerRepository: "airbyte/source-hubspot"
  dockerImageTag: "0.1.30"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/hubspot"
  icon: "hubspot.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/hubspot"
    connectionSpecification:
      type: "object"
      title: "HubSpot Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "credentials"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via HubSpot (OAuth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            - "credentials_title"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                examples:
                - "123456789000"
                description: "The Client ID of your HubSpot developer application.\
                  \ See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help finding this id."
              client_secret:
                type: "string"
                title: "Client Secret"
                examples:
                - "secret"
                description: "The Client Secret of your HubSpot developer application.\
                  \ See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help finding this secret."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                examples:
                - "refresh_token"
                description: "Refresh Token to renew the expired Access Token. See\
                  \ our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help generating the token."
                airbyte_secret: true
              credentials_title:
                enum:
                - "OAuth Credentials"
                type: "string"
                const: "OAuth Credentials"
                order: 0
                title: "Credentials Title"
                default: "OAuth Credentials"
                description: "Name of the credentials set"
          - type: "object"
            title: "API key"
            required:
            - "api_key"
            - "credentials_title"
            properties:
              api_key:
                type: "string"
                title: "API key"
                description: "HubSpot API Key. See our <a href=\"https://docs.airbyte.io/integrations/sources/hubspot\"\
                  >docs</a> if you need help finding this key."
                airbyte_secret: true
              credentials_title:
                enum:
                - "API Key Credentials"
                type: "string"
                const: "API Key Credentials"
                order: 0
                title: "Credentials title"
                default: "API Key Credentials"
                description: "Name of the credentials set"
          title: "Authentication mechanism"
          description: "Choose how to authenticate to HubSpot."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "374ebc65-6636-4ea0-925c-7d35999a8ffc"
  name: "Smartsheets"
  dockerRepository: "airbyte/source-smartsheets"
  dockerImageTag: "0.1.7"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/smartsheets"
  icon: "smartsheet.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/smartsheets"
    connectionSpecification:
      type: "object"
      title: "Smartsheets Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "access_token"
      - "spreadsheet_id"
      properties:
        access_token:
          type: "string"
          title: "Access Token"
          description: "The Access Token for making authenticated requests. Find in\
            \ the main menu: Account > Apps & Integrations > API Access"
          airbyte_secret: true
        spreadsheet_id:
          type: "string"
          title: "Sheet ID"
          description: "The spreadsheet ID. Find in the spreadsheet menu: File > Properties"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "3981c999-bd7d-4afc-849b-e53dea90c948"
  name: "Lever Hiring"
  dockerRepository: "airbyte/source-lever-hiring"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/lever-hiring"
  icon: "leverhiring.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/lever-hiring"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/lever-hiring#changelog"
    connectionSpecification:
      type: "object"
      title: "Lever Hiring Spec"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "start_date"
      properties:
        client_id:
          type: "string"
          title: "Client Id"
          description: "The client application id as provided when registering the\
            \ application with Lever."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-04-25T00:00:00Z"
          description: "UTC date and time in the format 2019-02-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        environment:
          enum:
          - "Sandbox"
          - "Production"
          type: "string"
          title: "Environment"
          default: "Production"
          description: "Sandbox or Production environment."
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "The application secret as provided when registering the application\
            \ with Lever."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "The refresh token your application will need to submit to\
            \ get a new access token after it's expired."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        - - "refresh_token"
        oauthFlowOutputParameters: []
- sourceDefinitionId: "3dc3037c-5ce8-4661-adc2-f7a9e3c5ece5"
  name: "Zuora"
  dockerRepository: "airbyte/source-zuora"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zuora"
  icon: "zuora.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zuora"
    connectionSpecification:
      type: "object"
      title: "Zuora Connector Configuration"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "tenant_endpoint"
      - "data_query"
      - "client_id"
      - "client_secret"
      properties:
        client_id:
          type: "string"
          title: "Client ID"
          description: "Your OAuth user Client ID"
          airbyte_secret: true
        data_query:
          enum:
          - "Live"
          - "Unlimited"
          type: "string"
          title: "Data Query Type"
          default: "Live"
          description: "Choose between `Live`, or `Unlimited` - the optimized, replicated\
            \ database at 12 hours freshness for high volume extraction <a href=\"\
            https://knowledgecenter.zuora.com/Central_Platform/Query/Data_Query/A_Overview_of_Data_Query#Query_Processing_Limitations\"\
            >Link</a>"
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          description: "Start Date in format: YYYY-MM-DD"
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "Your OAuth user Client Secret"
          airbyte_secret: true
        window_in_days:
          type: "string"
          title: "Query Window (in days)"
          default: "90"
          pattern: "^(0|[1-9]\\d*)(\\.\\d+)?$"
          examples:
          - "0.5"
          - "1"
          - "30"
          - "60"
          - "90"
          - "120"
          - "200"
          - "364"
          description: "The amount of days for each data-chunk begining from start_date.\
            \ Bigger the value - faster the fetch. (0.1 - as for couple of hours,\
            \ 1 - as for a Day; 364 - as for a Year)."
        tenant_endpoint:
          enum:
          - "US Production"
          - "US Cloud Production"
          - "US API Sandbox"
          - "US Cloud API Sandbox"
          - "US Central Sandbox"
          - "US Performance Test"
          - "EU Production"
          - "EU API Sandbox"
          - "EU Central Sandbox"
          type: "string"
          title: "Tenant Endpoint Location"
          description: "Please choose the right endpoint where your Tenant is located.\
            \ More info by this <a href=\"https://www.zuora.com/developer/api-reference/#section/Introduction/Access-to-the-API\"\
            >Link</a>"
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "40d24d0f-b8f9-4fe0-9e6c-b06c0f3f45e4"
  name: "Zendesk Chat"
  dockerRepository: "airbyte/source-zendesk-chat"
  dockerImageTag: "0.1.6"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-chat"
  icon: "zendesk.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-chat"
    connectionSpecification:
      type: "object"
      title: "Zendesk Chat Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      properties:
        subdomain:
          type: "string"
          title: "Subdomain (Optional)"
          default: ""
          description: "Required if you access Zendesk Chat from a Zendesk Support\
            \ subdomain."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-02-01T00:00:00Z"
          description: "The date from which you'd like to replicate data for Zendesk\
            \ Chat API, in the format YYYY-MM-DDT00:00:00Z."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "credentials"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your OAuth application"
                airbyte_secret: true
              credentials:
                enum:
                - "oauth2.0"
                type: "string"
                const: "oauth2.0"
                order: 0
                default: "oauth2.0"
              access_token:
                type: "string"
                title: "Access Token"
                description: "Access Token for making authenticated requests."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your OAuth application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "Refresh Token to obtain new Access Token, when it's\
                  \ expired."
                airbyte_secret: true
          - type: "object"
            title: "Access Token"
            required:
            - "credentials"
            - "access_token"
            properties:
              credentials:
                enum:
                - "access_token"
                type: "string"
                const: "access_token"
                order: 0
                default: "access_token"
              access_token:
                type: "string"
                title: "Access Token"
                description: "The Access Token to make authenticated requests."
                airbyte_secret: true
          title: "Authorization Method"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "credentials"
      predicate_value: "oauth2.0"
      oauth_config_specification:
        oauth_user_input_from_connector_config_specification:
          type: "object"
          properties:
            subdomain:
              type: "string"
              path_in_connector_config:
              - "subdomain"
          additionalProperties: false
        complete_oauth_output_specification:
          type: "object"
          properties:
            access_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "access_token"
            refresh_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "refresh_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "41991d12-d4b5-439e-afd0-260a31d4c53f"
  name: "SalesLoft"
  dockerRepository: "airbyte/source-salesloft"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/lever-onesignal"
  icon: "salesloft.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/salesloft"
    connectionSpecification:
      type: "object"
      title: "Source Salesloft Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "start_date"
      properties:
        client_id:
          type: "string"
          description: "Salesloft client id."
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-11-16T00:00:00Z"
          description: "The date from which you'd like to replicate data for Salesloft\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
        client_secret:
          type: "string"
          description: "Salesloft client secret."
          airbyte_secret: true
        refresh_token:
          type: "string"
          description: "Salesloft refresh token."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "431b2890-39cb-4138-bc30-7dccdd0b94e0"
  name: "Buildkite"
  dockerRepository: "farosai/airbyte-buildkite-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/buildkite-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "BuildKite Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "cutoff_days"
      properties:
        token:
          type: "string"
          title: "Token"
          description: "To create token go to https://buildkite.com/user/api-access-tokens"
          airbyte_secret: true
        page_size:
          type: "number"
          title: "Page Size"
          description: "number of pipelines, builds, jobs to fetch per call"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        organization:
          type: "string"
          title: "Organization Slug"
          description: "Only pull pipelines from the specified organization. If not\
            \ set, all pipelines from all organizations will be pulled."
        graphql_version:
          type: "string"
          title: "GraphQL Version"
          default: "v1"
        rest_api_version:
          type: "string"
          title: "Rest API Version"
          default: "v2"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "435bb9a5-7887-4809-aa58-28c27df0d7ad"
  name: "MySQL"
  dockerRepository: "airbyte/source-mysql"
  dockerImageTag: "0.5.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/mysql"
  icon: "mysql.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mysql"
    connectionSpecification:
      type: "object"
      title: "MySql Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "replication_method"
      properties:
        ssl:
          type: "boolean"
          order: 6
          title: "SSL Connection"
          default: true
          description: "Encrypt data using SSL."
        host:
          type: "string"
          order: 0
          title: "Host"
          description: "The host name of the database."
        port:
          type: "integer"
          order: 1
          title: "Port"
          default: 3306
          maximum: 65536
          minimum: 0
          examples:
          - "3306"
          description: "The port to connect to."
        database:
          type: "string"
          order: 2
          title: "Database"
          description: "The database name."
        password:
          type: "string"
          order: 4
          title: "Password"
          description: "The password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          order: 3
          title: "Username"
          description: "The username which is used to access the database."
        tunnel_method:
          type: "object"
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                type: "string"
                const: "NO_TUNNEL"
                order: 0
                description: "No ssh tunnel needed to connect to database"
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              ssh_key:
                type: "string"
                order: 4
                title: "SSH Private Key"
                multiline: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                airbyte_secret: true
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
              tunnel_method:
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
              tunnel_method:
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
              tunnel_user_password:
                type: "string"
                order: 4
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                airbyte_secret: true
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
        jdbc_url_params:
          type: "string"
          order: 5
          title: "JDBC URL Params"
          description: "Additional properties to pass to the jdbc url string when\
            \ connecting to the database formatted as 'key=value' pairs separated\
            \ by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)."
        replication_method:
          enum:
          - "STANDARD"
          - "CDC"
          type: "string"
          order: 7
          title: "Replication Method"
          default: "STANDARD"
          description: "Replication method which is used for data extraction from\
            \ the database. STANDARD replication requires no setup on the DB side\
            \ but will not be able to represent deletions incrementally. CDC uses\
            \ the Binlog to detect inserts, updates, and deletes. This needs to be\
            \ configured on the source database itself."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "445831eb-78db-4b1f-8f1f-0d96ad8739e2"
  name: "Drift"
  dockerRepository: "airbyte/source-drift"
  dockerImageTag: "0.2.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/drift"
  icon: "drift.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/drift"
    connectionSpecification:
      type: "object"
      title: "Drift Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required: []
      properties:
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "client_id"
            - "client_secret"
            - "access_token"
            - "refresh_token"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Drift developer application."
                airbyte_secret: true
              credentials:
                enum:
                - "oauth2.0"
                type: "string"
                const: "oauth2.0"
                order: 0
                default: "oauth2.0"
              access_token:
                type: "string"
                title: "Access Token"
                description: "Access Token for making authenticated requests."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Drift developer application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                default: ""
                description: "Refresh Token to renew the expired Access Token."
                airbyte_secret: true
          - type: "object"
            title: "Access Token"
            required:
            - "access_token"
            properties:
              credentials:
                enum:
                - "access_token"
                type: "string"
                const: "access_token"
                order: 0
                default: "access_token"
              access_token:
                type: "string"
                title: "Access Token"
                description: "Drift Access Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/drift\"\
                  >docs</a> for more information on how to generate this key."
                airbyte_secret: true
          title: "Authorization Method"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- sourceDefinitionId: "447e0381-3780-4b46-bb62-00a4e3c8b8e2"
  name: "IBM Db2"
  dockerRepository: "airbyte/source-db2"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/db2"
  icon: "db2.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/db2"
    connectionSpecification:
      type: "object"
      title: "IBM Db2 Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "db"
      - "username"
      - "password"
      - "encryption"
      properties:
        db:
          type: "string"
          order: 2
          examples:
          - "default"
          description: "Name of the database."
        host:
          type: "string"
          order: 0
          description: "Host of the Db2."
        port:
          type: "integer"
          order: 1
          default: 8123
          maximum: 65536
          minimum: 0
          examples:
          - "8123"
          description: "Port of the database."
        password:
          type: "string"
          order: 4
          description: "Password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          order: 3
          description: "Username to use to access the database."
        encryption:
          type: "object"
          oneOf:
          - title: "Unencrypted"
            required:
            - "encryption_method"
            properties:
              encryption_method:
                enum:
                - "unencrypted"
                type: "string"
                const: "unencrypted"
                default: "unencrypted"
            description: "Data transfer will not be encrypted."
            additionalProperties: false
          - title: "TLS Encrypted (verify certificate)"
            required:
            - "encryption_method"
            - "ssl_certificate"
            properties:
              ssl_certificate:
                type: "string"
                title: "SSL PEM file"
                multiline: true
                description: "Privacy Enhanced Mail (PEM) files are concatenated certificate\
                  \ containers frequently used in certificate installations"
                airbyte_secret: true
              encryption_method:
                enum:
                - "encrypted_verify_certificate"
                type: "string"
                const: "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
              key_store_password:
                type: "string"
                title: "Key Store Password. This field is optional. If you do not\
                  \ fill in this field, the password will be randomly generated."
                description: "Key Store Password"
                airbyte_secret: true
            description: "Verify and use the cert provided by the server."
            additionalProperties: false
          order: 5
          title: "Encryption"
          description: "Encryption method to use when communicating with the database"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "45d2e135-2ede-49e1-939f-3e3ec357a65e"
  name: "Recharge"
  dockerRepository: "airbyte/source-recharge"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/recharge"
  icon: "recharge.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/recharge"
    connectionSpecification:
      type: "object"
      title: "Recharge Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "access_token"
      properties:
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-05-14T00:00:00Z"
          description: "The date from which you'd like to replicate data for Recharge\
            \ API, in the format YYYY-MM-DDT00:00:00Z."
        access_token:
          type: "string"
          description: "The value of the Access Token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/recharge\">docs</a> for more\
            \ information"
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "47f17145-fe20-4ef5-a548-e29b048adf84"
  name: "Apify Dataset"
  dockerRepository: "airbyte/source-apify-dataset"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/apify-dataset"
  icon: "apify.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/apify-dataset"
    connectionSpecification:
      type: "object"
      title: "Apify Dataset Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "datasetId"
      properties:
        clean:
          type: "boolean"
          title: "Clean"
          description: "If set to true, only clean items will be downloaded from the\
            \ dataset. See description of what clean means in <a href=\"https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items\"\
            >Apify API docs</a>. If not sure, set clean to false."
        datasetId:
          type: "string"
          title: "Dataset ID"
          description: "ID of the dataset you would like to load to Airbyte."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "47f25999-dd5e-4636-8c39-e7cea2453331"
  name: "Bing Ads"
  dockerRepository: "airbyte/source-bing-ads"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/bing-ads"
  icon: "bingads.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bing-ads"
    connectionSpecification:
      type: "object"
      title: "Bing Ads Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "accounts"
      - "client_id"
      - "client_secret"
      - "customer_id"
      - "developer_token"
      - "refresh_token"
      - "user_id"
      - "reports_start_date"
      - "hourly_reports"
      - "daily_reports"
      - "weekly_reports"
      - "monthly_reports"
      properties:
        user_id:
          type: "string"
          title: "Account ID"
          description: "Bing Ads Account ID. You can find Account ID by going to your\
            \ profile and selecting Accounts and Billing."
        accounts:
          type: "object"
          oneOf:
          - title: "All accounts assigned to your user"
            required:
            - "selection_strategy"
            properties:
              selection_strategy:
                enum:
                - "all"
                type: "string"
                const: "all"
            description: "Fetch data for all available accounts."
            additionalProperties: false
          - title: "Subset of your accounts"
            required:
            - "ids"
            - "selection_strategy"
            properties:
              ids:
                type: "array"
                items:
                  type: "string"
                title: "IDs"
                minItems: 1
                description: "List of accounts from which data will be fetched."
                uniqueItems: true
              selection_strategy:
                enum:
                - "subset"
                type: "string"
                const: "subset"
            description: "Fetch data for subset of account IDs."
            additionalProperties: false
          title: "Accounts"
          description: "Account selection."
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Client ID of your Microsoft Advertising developer application."
          airbyte_secret: true
        customer_id:
          type: "string"
          title: "Customer ID"
          description: "User's Customer ID. Go to your Accounts and Billing page.\
            \ Your Customer ID will be listed on the Accounts tab under the heading\
            \ Customer."
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "The Client Secret of your Microsoft Advertising developer\
            \ application."
          airbyte_secret: true
        daily_reports:
          type: "boolean"
          title: "Daily reports"
          default: false
          description: "The report data will be aggregated by each day."
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "Refresh Token to renew the expired Access Token."
          airbyte_secret: true
        hourly_reports:
          type: "boolean"
          title: "Hourly reports"
          default: false
          description: "The report data will be aggregated by each hour of the day."
        weekly_reports:
          type: "boolean"
          title: "Weekly reports"
          default: false
          description: "The report data will be aggregated by each week running from\
            \ Sunday through Saturday."
        developer_token:
          type: "string"
          title: "Developer Token"
          description: "Developer token associated with user."
          airbyte_secret: true
        monthly_reports:
          type: "boolean"
          title: "Monthly reports"
          default: false
          description: "The report data will be aggregated by each month."
        reports_start_date:
          type: "string"
          title: "Reports Start Date"
          format: "date"
          default: "2020-01-01"
          description: "UTC date in YYYY-MM-DD format. Any reports before this date\
            \ will not be replicated."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "4b3cd0a4-4994-4616-af28-9871e28a8368"
  name: "Statuspage"
  dockerRepository: "farosai/airbyte-statuspage-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/statuspage-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Statuspage Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "page_id"
      - "api_key"
      - "cutoff_days"
      properties:
        org_id:
          type: "string"
          title: "Organization ID"
          description: "Statuspage Organization ID"
        api_key:
          type: "string"
          title: "Statuspage API key"
          description: "API key for Statuspage API authentication"
          airbyte_secret: true
        page_id:
          type: "string"
          title: "Page ID"
          description: "Statuspage Page ID"
          airbyte_secret: true
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "4bfac00d-ce15-44ff-95b9-9e3c3e8fbd35"
  name: "TikTok Marketing"
  dockerRepository: "airbyte/source-tiktok-marketing"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/tiktok-marketing"
  icon: "tiktok.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/tiktok-marketing"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/tiktok-marketing"
    connectionSpecification:
      type: "object"
      title: "TikTok Marketing Source Spec"
      required:
      - "access_token"
      properties:
        start_date:
          type: "string"
          order: 3
          title: "Start Date"
          default: "2016-09-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          description: "The Start Date in format: YYYY-MM-DD. Any data before this\
            \ date will not be replicated. If this parameter is not set, all data\
            \ will be replicated."
        environment:
          type: "object"
          oneOf:
          - type: "object"
            title: "Production"
            required:
            - "app_id"
            - "secret"
            properties:
              app_id:
                type: "string"
                title: "App Id"
                description: "The App ID applied by the developer."
              secret:
                type: "string"
                title: "Secret"
                description: "The private key of the developer application."
                airbyte_secret: true
              environment:
                type: "string"
                const: "prod"
                title: "Environment"
          - type: "object"
            title: "Sandbox"
            required:
            - "advertiser_id"
            properties:
              environment:
                type: "string"
                const: "sandbox"
                title: "Environment"
              advertiser_id:
                type: "string"
                title: "Advertiser Id"
                description: "The Advertiser ID  which generated for the developer's\
                  \ Sandbox application."
          order: 2
          title: "Environment"
          default: "Production"
        access_token:
          type: "string"
          order: 1
          title: "Access Token"
          description: "The Long-term Authorized Access Token."
          airbyte_secret: true
        report_granularity:
          enum:
          - "LIFETIME"
          - "DAY"
          - "HOUR"
          type: "string"
          order: 4
          title: "Report Granularity"
          default: "DAY"
          description: "Which time granularity should be grouped by; for LIFETIME\
            \ there will be no grouping. This option is used for reports' streams\
            \ only."
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "overwrite"
    - "append"
    - "append_dedup"
- sourceDefinitionId: "4c4613d8-ffcd-4db8-a8f8-d325052aec11"
  name: "Jenkins"
  dockerRepository: "farosai/airbyte-jenkins-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/jenkins-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Jenkins Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "server_url"
      - "user"
      - "token"
      properties:
        user:
          type: "string"
          title: "User"
          description: "Jenkins User"
        depth:
          type: "integer"
          title: "Depth"
          description: "Jenkins JSON API does not support deep scan, it is required\
            \ to generate a suitable tree for the corresponding depth. Job in some\
            \ cases have many sub jobs, depth needs to quantify how many sub jobs\
            \ are showed. If depth is not provided we will try to compute it automatically"
        token:
          type: "string"
          title: "Token"
          description: "Jenkins Token for Jenkins API authentication"
          airbyte_secret: true
        pageSize:
          type: "integer"
          title: "Page Size"
          default: 10
          minimum: 1
          description: "Quantity of jobs on a single page fetched from Jenkins"
        server_url:
          type: "string"
          title: "Jenkins Server URL"
          examples:
          - "https://my-jenkins-server.example.com"
          description: "The Server URL for fetching data from Jenkins"
        last100Builds:
          type: "boolean"
          title: "Last 100 Builds Only"
          default: false
          description: "Fetch only 100 last builds from Jenkins server"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "51d2be20-0bdc-4532-b5a2-98a2ef91b23e"
  name: "Bitbucket"
  dockerRepository: "farosai/airbyte-bitbucket-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/bitbucket-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Bitbucket Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "workspaces"
      - "cutoff_days"
      properties:
        token:
          type: "string"
          title: "Access Token"
          description: "Personal Access Token for Bitbucket API authentication. See\
            \ https://confluence.atlassian.com/bitbucketserver/personal-access-tokens-939515499.html\
            \ for information on how to generate this token."
          airbyte_secret: true
        pagelen:
          type: "integer"
          title: "Page Size"
          default: 100
          description: "Page size to use when requesting records from Bitbucket API"
        password:
          type: "string"
          description: "Bitbucket password"
          airbyte_secret: true
        username:
          type: "string"
          description: "Bitbucket username. Either username/password or Access Token\
            \ must be provided."
        serverUrl:
          type: "string"
          title: "API URL"
          default: "https://api.bitbucket.org/2.0"
          examples:
          - "https://api.bitbucket.org/2.0"
          description: "The API URL for fetching data from Bitbucket"
        workspaces:
          type: "array"
          items:
            type: "string"
          title: "Workspaces"
          examples:
          - "blaze-lib"
          description: "Names of your Bitbucket workspaces"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        repositories:
          type: "array"
          items:
            type: "string"
          title: "Repositories"
          examples:
          - "blaze-lib/blaze"
          description: "Names of your Bitbucket repositories in the format 'workspace/repo-slug'.\
            \ If none are provided, data from all repositories for the specified workspaces\
            \ will be pulled."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "598bf560-c097-4c55-b911-7553f5b93883"
  name: "Squadcast"
  dockerRepository: "farosai/airbyte-squadcast-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/squadcast-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "SquadCast Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "cutoff_days"
      properties:
        token:
          type: "string"
          title: "Token"
          description: "Get API Refresh Token on https://app.squadcast.com/user/USER_ID\
            \ where USER_ID is user's ID"
          airbyte_secret: true
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        event_deduped:
          type: "boolean"
          title: "Events Deduped"
          description: "If set to true, it will return only the deduped events. If\
            \ set to false, it will return only the non-deduped event. Otherwise it\
            \ will return all the events"
        event_owner_id:
          type: "string"
          title: "Event Owner ID"
          description: "Team ID or User ID"
        event_incident_id:
          type: "string"
          title: "Events Incident ID"
          description: "If set it will pull all events from only this Incident. If\
            \ no it pull all events from all incidents"
        incident_owner_id:
          type: "string"
          title: "Incident Owner ID"
          description: "Team ID or User ID"
        max_content_length:
          type: "integer"
          title: "Max Content Length"
          default: 20000
          description: "Max size of Squadcast API response content in bytes. Increase\
            \ this value if you get a \"maxContentLength exceeded\" error"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "59c5501b-9f95-411e-9269-7143c939adbd"
  name: "BigCommerce"
  dockerRepository: "airbyte/source-bigcommerce"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/bigcommerce"
  icon: "bigcommerce.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bigcommerce"
    connectionSpecification:
      type: "object"
      title: "BigCommerce Source CDK Specifications"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "store_hash"
      - "access_token"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "The date you would like to replicate data. Format: YYYY-MM-DD."
        store_hash:
          type: "string"
          title: "Store Hash"
          description: "The hash code of the store. For https://api.bigcommerce.com/stores/HASH_CODE/v3/,\
            \ The store's hash code is 'HASH_CODE'."
        access_token:
          type: "string"
          title: "Access Token"
          description: "Access Token for making authenticated requests."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "59f1e50a-331f-4f09-b3e8-2e8d4d355f44"
  name: "Greenhouse"
  dockerRepository: "airbyte/source-greenhouse"
  dockerImageTag: "0.2.6"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/greenhouse"
  icon: "greenhouse.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/greenhouse"
    connectionSpecification:
      type: "object"
      title: "Greenhouse Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      properties:
        api_key:
          type: "string"
          description: "Greenhouse API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/greenhouse\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "5b9cb09e-1003-4f9c-983d-5779d1b2cd51"
  name: "Mailgun"
  dockerRepository: "airbyte/source-mailgun"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/mailgun"
  icon: "mailgun.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mailgun"
    connectionSpecification:
      type: "object"
      title: "Source Mailgun Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "private_key"
      properties:
        start_date:
          type: "string"
          title: "Replication Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$"
          examples:
          - "2020-10-01 00:00:00"
          description: "UTC date and time in the format 2020-10-01 00:00:00. Any data\
            \ before this date will not be replicated. If omitted, defaults to 3 days\
            \ ago."
        private_key:
          type: "string"
          title: "Private API Key"
          description: "Primary account API key to access your Mailgun data."
          airbyte_secret: true
        domain_region:
          type: "string"
          title: "Domain Region Code"
          description: "Domain region code. 'EU' or 'US' are possible values. The\
            \ default is 'US'."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "5cb7e5fe-38c2-11ec-8d3d-0242ac130003"
  name: "Pinterest"
  dockerRepository: "airbyte/source-pinterest"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/pinterest"
  icon: "pinterest.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/pinterest"
    connectionSpecification:
      type: "object"
      title: "Pinterest Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      properties:
        client_id:
          type: "string"
          title: "Client ID"
          description: "Your Pinterest client ID. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          examples:
          - "2020-07-28"
          description: "A date in the format YYYY-MM-DD. If you have not set a date,\
            \ it would be defaulted to 2020-07-28."
        access_token:
          type: "string"
          title: "Access Token"
          description: "Your Pinterest access token. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "Your Pinterest client secret. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "Your Pinterest refresh token. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "5e6175e5-68e1-4c17-bff9-56103bbb0d80"
  name: "Gitlab"
  dockerRepository: "airbyte/source-gitlab"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/gitlab"
  icon: "gitlab.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/gitlab"
    connectionSpecification:
      type: "object"
      title: "Source GitLab Singer Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_url"
      - "private_token"
      - "start_date"
      properties:
        groups:
          type: "string"
          title: "Groups"
          examples:
          - "airbyte.io"
          description: "Space-delimited list of groups. e.g. airbyte.io."
        api_url:
          type: "string"
          title: "API URL"
          examples:
          - "gitlab.com"
          description: "Please enter your basic URL from GitLab instance."
        projects:
          type: "string"
          title: "Projects"
          examples:
          - "airbyte.io/documentation"
          description: "Space-delimited list of projects. e.g. airbyte.io/documentation\
            \ meltano/tap-gitlab."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-03-01T00:00:00Z"
          description: "The date from which you'd like to replicate data for GitLab\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
        private_token:
          type: "string"
          title: "Privat Token"
          description: "Log into your GitLab account and then generate a personal\
            \ Access Token."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "6371b14b-bc68-4236-bfbd-468e8df8e968"
  name: "PokeAPI"
  dockerRepository: "airbyte/source-pokeapi"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/pokeapi"
  icon: "pokeapi.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/pokeapi"
    connectionSpecification:
      type: "object"
      title: "Pokeapi Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "pokemon_name"
      properties:
        pokemon_name:
          type: "string"
          title: "Pokemon Name"
          pattern: "^[a-z0-9_\\-]+$"
          examples:
          - "ditto, luxray, snorlax"
          description: "Pokemon requested from the API."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "63aa5e31-9490-4730-b2d4-14e42a4eb899"
  name: "Phabricator"
  dockerRepository: "farosai/airbyte-phabricator-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/phabricator-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Phabricator Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "server_url"
      - "token"
      - "cutoff_days"
      properties:
        limit:
          type: "integer"
          title: "Limit"
          default: 100
          maximum: 100
          minimum: 1
          description: "Limit of results on a single page fetched from Phabricator"
        token:
          type: "string"
          title: "Conduit Token"
          description: "Conduit Token for Phabricator API authentication"
          airbyte_secret: true
        projects:
          type: "array"
          items:
            type: "string"
          title: "Projects"
          examples:
          - "my_project_1"
          - "my_project_2"
          description: "List of Phabricator projects slugs, e.g. `my_project_1,my_project_2`.\
            \ Slugs are the same as project hashtags. If none provided would sync\
            \ all projects."
        server_url:
          type: "string"
          title: "Phabricator Conduit API URL"
          examples:
          - "https://my-phabricator-server.example.com"
          description: "The API URL for fetching data from Phabricator"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        repositories:
          type: "array"
          items:
            type: "string"
          title: "Repositories"
          examples:
          - "repo-1"
          - "repo-2"
          description: "List of Phabricator repositories, e.g. `repo-1,repo-2`. If\
            \ none provided would sync all repositories."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "63cea06f-1c75-458d-88fe-ad48c7cb27fd"
  name: "Braintree"
  dockerRepository: "airbyte/source-braintree"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/braintree"
  icon: "braintree.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/braintree"
    connectionSpecification:
      type: "object"
      title: "Braintree Spec"
      required:
      - "merchant_id"
      - "public_key"
      - "private_key"
      - "environment"
      properties:
        public_key:
          name: "Public Key"
          type: "string"
          title: "Public Key"
          description: "Braintree Public Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/braintree\"\
            >docs</a> for more information on how to obtain this key."
        start_date:
          name: "Start Date"
          type: "string"
          title: "Start Date"
          format: "date-time"
          examples:
          - "2020"
          - "2020-12-30"
          - "2020-11-22 20:20:05"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        environment:
          enum:
          - "Development"
          - "Sandbox"
          - "Qa"
          - "Production"
          name: "Environment"
          type: "string"
          title: "Environment"
          examples:
          - "sandbox"
          - "production"
          - "qa"
          - "development"
          description: "Environment specifies where the data will come from."
        merchant_id:
          name: "Merchant ID"
          type: "string"
          title: "Merchant ID"
          description: "The unique identifier for your entire gateway account. See\
            \ the <a href=\"https://docs.airbyte.io/integrations/sources/braintree\"\
            >docs</a> for more information on how to obtain this ID."
        private_key:
          name: "Private Key"
          type: "string"
          title: "Private Key"
          description: "Braintree Private Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/braintree\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "6727d77e-5c06-4c28-817a-c1cacc18e106"
  name: "CircleCI"
  dockerRepository: "farosai/airbyte-circleci-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/circleci-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "CircleCI Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "repo_names"
      - "cutoff_days"
      properties:
        url:
          type: "string"
          title: "API URL"
          default: "https://circleci.com/api/v2"
          description: "CircleCI API URL"
        token:
          type: "string"
          title: "token"
          description: "CircleCI personal API token. See https://circleci.com/docs/2.0/managing-api-tokens/#creating-a-personal-api-token"
          airbyte_secret: true
        repo_names:
          type: "array"
          items:
            type: "string"
          title: "Repository Names"
          description: "Names should be in the format \"project_type/organization_name/repository_name\""
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        reject_unauthorized:
          type: "boolean"
          title: "Enforce Authorized Requests"
          default: true
          description: "Enable certificate validation for the CircleCI server"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "686473f1-76d9-4994-9cc7-9b13da46147c"
  name: "Chargebee"
  dockerRepository: "airbyte/source-chargebee"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/chargebee"
  icon: "chargebee.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://apidocs.chargebee.com/docs/api"
    connectionSpecification:
      type: "object"
      title: "Chargebee Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "site"
      - "site_api_key"
      - "start_date"
      - "product_catalog"
      properties:
        site:
          type: "string"
          title: "Site"
          examples:
          - "airbyte-test"
          description: "The site prefix for your Chargebee instance."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-25T00:00:00Z"
          description: "UTC date and time in the format 2021-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        site_api_key:
          type: "string"
          title: "API Key"
          examples:
          - "test_3yzfanAXF66USdWC9wQcM555DQJkSYoppu"
          description: "Chargebee API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/chargebee\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        product_catalog:
          enum:
          - "1.0"
          - "2.0"
          type: "string"
          title: "Product Catalog"
          description: "Product Catalog version of your Chargebee site. Instructions\
            \ on how to find your version you may find <a href=\"https://apidocs.chargebee.com/docs/api?prod_cat_ver=2\"\
            >here</a> under `API Version` section."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "68e63de2-bb83-4c7e-93fa-a8a9051e3993"
  name: "Jira"
  dockerRepository: "airbyte/source-jira"
  dockerImageTag: "0.2.20"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/jira"
  icon: "jira.svg"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/jira"
    connectionSpecification:
      type: "object"
      title: "Jira Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_token"
      - "domain"
      - "email"
      properties:
        email:
          type: "string"
          title: "Email"
          description: "The user email for your Jira account."
        domain:
          type: "string"
          title: "Domain"
          pattern: "^[a-zA-Z0-9._-]*\\.atlassian\\.net$"
          examples:
          - "domainname.atlassian.net"
          description: "The Domain for your Jira account, e.g. airbyteio.atlassian.net"
        projects:
          type: "array"
          items:
            type: "string"
          title: "Projects"
          examples:
          - "PROJ1"
          - "PROJ2"
          description: "List of Jira project keys to replicate data for."
        api_token:
          type: "string"
          title: "API Token"
          description: "Jira API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/jira\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-03-01T00:00:00Z"
          description: "The date from which you'd like to replicate data for Jira\
            \ in the format YYYY-MM-DDT00:00:00Z. All data generated after this date\
            \ will be replicated. Note that it will be used only in the following\
            \ incremental streams: issues."
        render_fields:
          type: "boolean"
          title: "Render Issue Fields"
          default: false
          description: "Render issue fields in HTML format in addition to Jira JSON-like\
            \ format."
        additional_fields:
          type: "array"
          items:
            type: "string"
          title: "Additional Fields"
          examples:
          - "customfield_10096"
          - "customfield_10071"
          description: "List of additional fields to include in replicating issues."
        expand_issue_changelog:
          type: "boolean"
          title: "Expand Issue Changelog"
          default: false
          description: "Expand the changelog when replicating issues."
        enable_experimental_streams:
          type: "boolean"
          title: "Enable Experimental Streams"
          default: false
          description: "Allow the use of experimental streams which rely on undocumented\
            \ Jira API endpoints. See https://docs.airbyte.io/integrations/sources/jira#experimental-tables\
            \ for more info."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "69589781-7828-43c5-9f63-8925b1c1ccc2"
  name: "S3"
  dockerRepository: "airbyte/source-s3"
  dockerImageTag: "0.1.9"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/s3"
  icon: "s3.svg"
  sourceType: "file"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/s3"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/s3"
    connectionSpecification:
      type: "object"
      title: "S3 Source Spec"
      required:
      - "dataset"
      - "path_pattern"
      - "provider"
      properties:
        format:
          type: "object"
          oneOf:
          - type: "object"
            title: "csv"
            properties:
              encoding:
                type: "string"
                title: "Encoding"
                default: "utf8"
                description: "The character encoding of the CSV data. Leave blank\
                  \ to default to <strong>UTF-8</strong>. See <a href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\"\
                  \ target=\"_blank\">list of python encodings</a> for allowable options."
              filetype:
                type: "string"
                const: "csv"
                title: "Filetype"
              delimiter:
                type: "string"
                title: "Delimiter"
                default: ","
                minLength: 1
                description: "The character delimiting individual cells in the CSV\
                  \ data. This may only be a 1-character string. For tab-delimited\
                  \ data enter '\\t'."
              block_size:
                type: "integer"
                title: "Block Size"
                default: 10000
                description: "The chunk size in bytes to process at a time in memory\
                  \ from each file. If your data is particularly wide and failing\
                  \ during schema detection, increasing this should solve it. Beware\
                  \ of raising this too high as you could hit OOM errors."
              quote_char:
                type: "string"
                title: "Quote Char"
                default: "\""
                description: "The character used optionally for quoting CSV values.\
                  \ To disallow quoting, make this field blank."
              escape_char:
                type: "string"
                title: "Escape Char"
                description: "The character used optionally for escaping special characters.\
                  \ To disallow escaping, leave this field blank."
              double_quote:
                type: "boolean"
                title: "Double Quote"
                default: true
                description: "Whether two quotes in a quoted CSV value denote a single\
                  \ quote in the data."
              infer_datatypes:
                type: "boolean"
                title: "Infer Datatypes"
                default: true
                description: "Configures whether a scheme for the source should be\
                  \ inferred from the current data or not.If set to false and a custom\
                  \ schema is set, then the custom_schema is usedIf a custom schema\
                  \ is not set, and this is set to false, then all fields will be\
                  \ read as strings"
              advanced_options:
                type: "string"
                title: "Advanced Options"
                default: "{}"
                examples:
                - "{\"column_names\": [\"column1\", \"column2\"]}"
                description: "Optionally add a valid JSON string here to provide additional\
                  \ <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ReadOptions.html#pyarrow.csv.ReadOptions\"\
                  \ target=\"_blank\">Pyarrow ReadOptions</a>. Specify 'column_names'\
                  \ here if your CSV doesn't have header, or if you want to use custom\
                  \ column names. 'block_size' and 'encoding' are already used above,\
                  \ specify them again here will override the values above."
              newlines_in_values:
                type: "boolean"
                title: "Newlines In Values"
                default: false
                description: "Whether newline characters are allowed in CSV values.\
                  \ Turning this on may affect performance. Leave blank to default\
                  \ to False."
              additional_reader_options:
                type: "string"
                title: "Additional Reader Options"
                default: "{}"
                examples:
                - "{\"timestamp_parsers\": [\"%m/%d/%Y %H:%M\", \"%Y/%m/%d %H:%M\"\
                  ], \"strings_can_be_null\": true, \"null_values\": [\"NA\", \"NULL\"\
                  ]}"
                description: "Optionally add a valid JSON string here to provide additional\
                  \ options to the csv reader. Mappings must correspond to options\
                  \ <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions\"\
                  \ target=\"_blank\">detailed here</a>. 'column_types' is used internally\
                  \ to handle schema so overriding that would likely cause problems."
            description: "This connector utilises <a href=\"https: // arrow.apache.org/docs/python/generated/pyarrow.csv.open_csv.html\"\
              \ target=\"_blank\">PyArrow (Apache Arrow)</a> for CSV parsing."
          - type: "object"
            title: "parquet"
            properties:
              columns:
                type: "array"
                items:
                  type: "string"
                title: "Columns"
                description: "If you only want to sync a subset of the columns from\
                  \ the file(s), add the columns you want here. Leave it empty to\
                  \ sync all columns."
              filetype:
                type: "string"
                const: "parquet"
                title: "Filetype"
              batch_size:
                type: "integer"
                title: "Batch Size"
                default: 65536
                description: "Maximum number of records per batch. Batches may be\
                  \ smaller if there aren’t enough rows in the file. This option can\
                  \ help to optimize a work with memory if your data is particularly\
                  \ wide or failing during detection of OOM errors."
              buffer_size:
                type: "integer"
                title: "Buffer Size"
                default: 0
                description: "Perform read buffering when deserializing individual\
                  \ column chunks. By default every group column will be loaded fully\
                  \ to memory. This option can help to optimize a work with memory\
                  \ if your data is particularly wide or failing during detection\
                  \ of OOM errors."
            description: "This connector utilises <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetFile.html\"\
              \ target=\"_blank\">PyArrow (Apache Arrow)</a> for Parquet parsing."
          title: "Format"
          default: "csv"
        schema:
          type: "string"
          title: "Schema"
          default: "{}"
          examples:
          - "{\"column_1\": \"number\", \"column_2\": \"string\", \"column_3\": \"\
            array\", \"column_4\": \"object\", \"column_5\": \"boolean\"}"
          description: "Optionally provide a schema to enforce, as a valid JSON string.\
            \ Ensure this is a mapping of <strong>{ \"column\" : \"type\" }</strong>,\
            \ where types are valid <a href=\"https://json-schema.org/understanding-json-schema/reference/type.html\"\
            \ target=\"_blank\">JSON Schema datatypes</a>. Leave as {} to auto-infer\
            \ the schema."
        dataset:
          type: "string"
          title: "Dataset"
          pattern: "^([A-Za-z0-9-_]+)$"
          description: "This source creates one table per connection, this field is\
            \ the name of that table. This should include only letters, numbers, dash\
            \ and underscores. Note that this may be altered according to destination."
        provider:
          type: "object"
          title: "S3: Amazon Web Services"
          required:
          - "bucket"
          properties:
            bucket:
              type: "string"
              title: "Bucket"
              description: "Name of the S3 bucket where the file(s) exist."
            use_ssl:
              type: "boolean"
              title: "Use Ssl"
              description: "Is remote server using secure SSL/TLS connection"
            endpoint:
              type: "string"
              title: "Endpoint"
              default: ""
              description: "Endpoint to an S3 compatible service. Leave empty to use\
                \ AWS."
            path_prefix:
              type: "string"
              title: "Path Prefix"
              default: ""
              description: "By providing a path-like prefix (e.g. myFolder/thisTable/)\
                \ under which all the relevant files sit, we can optimise finding\
                \ these in S3. This is optional but recommended if your bucket contains\
                \ many folders/files."
            verify_ssl_cert:
              type: "boolean"
              title: "Verify Ssl Cert"
              description: "Allow self signed certificates"
            aws_access_key_id:
              type: "string"
              title: "Aws Access Key Id"
              description: "In order to access private Buckets stored on AWS S3, this\
                \ connector requires credentials with the proper permissions. If accessing\
                \ publicly available data, this field is not necessary."
              airbyte_secret: true
            aws_secret_access_key:
              type: "string"
              title: "Aws Secret Access Key"
              description: "In order to access private Buckets stored on AWS S3, this\
                \ connector requires credentials with the proper permissions. If accessing\
                \ publicly available data, this field is not necessary."
              airbyte_secret: true
        path_pattern:
          type: "string"
          title: "Path Pattern"
          examples:
          - "**"
          - "myFolder/myTableFiles/*.csv|myFolder/myOtherTableFiles/*.csv"
          description: "Add at least 1 pattern here to match filepaths against. Use\
            \ | to separate multiple patterns. Airbyte uses these patterns to determine\
            \ which files to pick up from the provider storage. See <a href=\"https://facelessuser.github.io/wcmatch/glob/\"\
            \ target=\"_blank\">wcmatch.glob</a> to understand pattern syntax (GLOBSTAR\
            \ and SPLIT flags are enabled). Use pattern <strong>**</strong> to pick\
            \ up all files."
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "overwrite"
    - "append"
    - "append_dedup"
- sourceDefinitionId: "6acf6b55-4f1e-4fca-944e-1a3caef8aba8"
  name: "Instagram"
  dockerRepository: "airbyte/source-instagram"
  dockerImageTag: "0.1.9"
  documentationUrl: "https://hub.docker.com/r/airbyte/source-instagram"
  icon: "instagram.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/instagram"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/instagram"
    connectionSpecification:
      type: "object"
      title: "Source Instagram"
      required:
      - "start_date"
      - "access_token"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          format: "date-time"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "The date from which you'd like to replicate data for User\
            \ Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after\
            \ this date will be replicated."
        access_token:
          type: "string"
          title: "Access Token"
          description: "The value of the access token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/instagram\">docs</a> for\
            \ more information"
          airbyte_secret: true
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "6e00b415-b02e-4160-bf02-58176a0ae687"
  name: "Notion"
  dockerRepository: "airbyte/source-notion"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/notion"
  icon: "notion.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/notion"
    connectionSpecification:
      type: "object"
      title: "Notion Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "access_token"
      - "start_date"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$"
          examples:
          - "2020-11-16T00:00:00.000Z"
          description: "The date from which you'd like to replicate data for Notion\
            \ API, in the format YYYY-MM-DDT00:00:00.000Z. All data generated after\
            \ this date will be replicated."
        access_token:
          type: "string"
          title: "Access Token"
          description: "Notion API access token, see the <a href=\"https://developers.notion.com/docs/authorization\"\
            >docs</a> for more information on how to obtain this token."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "6ff047c0-f5d5-4ce5-8c81-204a830fa7e1"
  name: "AWS CloudTrail"
  dockerRepository: "airbyte/source-aws-cloudtrail"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/aws-cloudtrail"
  icon: "awscloudtrail.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/aws-cloudtrail"
    connectionSpecification:
      type: "object"
      title: "Aws CloudTrail Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "aws_key_id"
      - "aws_secret_key"
      - "aws_region_name"
      - "start_date"
      properties:
        aws_key_id:
          type: "string"
          title: "Key ID"
          description: "AWS CloudTrail Access Key ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/aws-cloudtrail\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          default: "1970-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "The date you would like to replicate data. Data in AWS CloudTrail\
            \ is available for last 90 days only. Format: YYYY-MM-DD."
        aws_secret_key:
          type: "string"
          title: "Secret Key"
          description: "AWS CloudTrail Access Key ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/aws-cloudtrail\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        aws_region_name:
          type: "string"
          title: "Region Name"
          description: "The default AWS Region to use, for example, us-west-1 or us-west-2.\
            \ When specifying a Region inline during client initialization, this property\
            \ is named region_name."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "71607ba1-c0ac-4799-8049-7f4b90dd50f7"
  name: "Google Sheets"
  dockerRepository: "airbyte/source-google-sheets"
  dockerImageTag: "0.2.8"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/google-sheets"
  icon: "google-sheets.svg"
  sourceType: "file"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-sheets"
    connectionSpecification:
      type: "object"
      title: "Stripe Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "spreadsheet_id"
      properties:
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Google (Oauth)"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                type: "string"
                const: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your developer application"
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The client secret of your developer application"
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "A refresh token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
          - type: "object"
            title: "Service Account Key Authentication"
            required:
            - "auth_type"
            - "service_account_info"
            properties:
              auth_type:
                type: "string"
                const: "Service"
              service_account_info:
                type: "string"
                examples:
                - "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID,\
                  \ \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                description: "The JSON key of the service account to use for authorization"
                airbyte_secret: true
        spreadsheet_id:
          type: "string"
          description: "The ID of the spreadsheet to be replicated."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "722ba4bf-06ec-45a4-8dd5-72e4a5cf3903"
  name: "My Hours"
  dockerRepository: "airbyte/source-my-hours"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/my-hours"
  icon: "my-hours.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/my-hours"
    connectionSpecification:
      type: "object"
      title: "My Hours Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "email"
      - "password"
      - "start_date"
      properties:
        email:
          type: "string"
          title: "Email"
          example: "john@doe.com"
          description: "Your My Hours username"
        password:
          type: "string"
          title: "Password"
          description: "The password associated to the username"
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "%Y-%m-%d"
          - "2016-01-01"
          description: "Start date for collecting time logs"
        logs_batch_size:
          type: "integer"
          title: "Time logs batch size"
          default: 30
          maximum: 365
          minimum: 1
          examples:
          - 30
          description: "Pagination size used for retrieving logs in days"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "77225a51-cd15-4a13-af02-65816bd0ecf4"
  name: "Square"
  dockerRepository: "airbyte/source-square"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/square"
  icon: "square.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/square"
    connectionSpecification:
      type: "object"
      title: "Square Source CDK Specifications"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "is_sandbox"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: "The API key for a Square application."
          airbyte_secret: true
        is_sandbox:
          type: "boolean"
          title: "Sandbox"
          default: true
          examples:
          - true
          - false
          description: "Determines whether to use the sandbox or production environment."
        start_date:
          type: "string"
          title: "Start Date"
          default: "1970-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "UTC date in the format YYYY-MM-DD. Any data before this date\
            \ will not be replicated. If not set, all data will be replicated."
        include_deleted_objects:
          type: "boolean"
          title: "Include Deleded Objects"
          default: false
          examples:
          - true
          - false
          description: "In some streams there is an option to include deleted objects\
            \ (Items, Categories, Discounts, Taxes)"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "778daa7c-feaf-4db6-96f3-70fd645acc77"
  name: "File"
  dockerRepository: "airbyte/source-file"
  dockerImageTag: "0.2.8"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/file"
  icon: "file.svg"
  sourceType: "file"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/file"
    connectionSpecification:
      type: "object"
      title: "File Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "dataset_name"
      - "format"
      - "url"
      - "provider"
      properties:
        url:
          type: "string"
          title: "URL"
          description: "The URL path to access the file which should be replicated."
        format:
          enum:
          - "csv"
          - "json"
          - "jsonl"
          - "excel"
          - "feather"
          - "parquet"
          type: "string"
          title: "File Format"
          default: "csv"
          description: "The Format of the file which should be replicated (Warning:\
            \ some formats may be experimental, please refer to the docs)."
        provider:
          type: "object"
          oneOf:
          - title: "HTTPS: Public Web"
            required:
            - "storage"
            properties:
              storage:
                enum:
                - "HTTPS"
                type: "string"
                const: "HTTPS"
                default: "HTTPS"
          - title: "GCS: Google Cloud Storage"
            required:
            - "storage"
            properties:
              storage:
                enum:
                - "GCS"
                type: "string"
                const: "GCS"
                title: "Storage"
                default: "GCS"
              service_account_json:
                type: "string"
                title: "Service Account JSON"
                description: "In order to access private Buckets stored on Google\
                  \ Cloud, this connector would need a service account json credentials\
                  \ with the proper permissions as described <a href=\"https://cloud.google.com/iam/docs/service-accounts\"\
                  \ target=\"_blank\">here</a>. Please generate the credentials.json\
                  \ file and copy/paste its content to this field (expecting JSON\
                  \ formats). If accessing publicly available data, this field is\
                  \ not necessary."
          - title: "S3: Amazon Web Services"
            required:
            - "storage"
            properties:
              storage:
                enum:
                - "S3"
                type: "string"
                const: "S3"
                title: "Storage"
                default: "S3"
              aws_access_key_id:
                type: "string"
                title: "AWS Access Key ID"
                description: "In order to access private Buckets stored on AWS S3,\
                  \ this connector would need credentials with the proper permissions.\
                  \ If accessing publicly available data, this field is not necessary."
              aws_secret_access_key:
                type: "string"
                title: "AWS Secret Access Key"
                description: "In order to access private Buckets stored on AWS S3,\
                  \ this connector would need credentials with the proper permissions.\
                  \ If accessing publicly available data, this field is not necessary."
                airbyte_secret: true
          - title: "AzBlob: Azure Blob Storage"
            required:
            - "storage"
            - "storage_account"
            properties:
              storage:
                enum:
                - "AzBlob"
                type: "string"
                const: "AzBlob"
                title: "Storage"
                default: "AzBlob"
              sas_token:
                type: "string"
                title: "SAS Token"
                description: "To access Azure Blob Storage, this connector would need\
                  \ credentials with the proper permissions. One option is a SAS (Shared\
                  \ Access Signature) token. If accessing publicly available data,\
                  \ this field is not necessary."
                airbyte_secret: true
              shared_key:
                type: "string"
                title: "Shared Key"
                description: "To access Azure Blob Storage, this connector would need\
                  \ credentials with the proper permissions. One option is a storage\
                  \ account shared key (aka account key or access key). If accessing\
                  \ publicly available data, this field is not necessary."
                airbyte_secret: true
              storage_account:
                type: "string"
                title: "Storage Account"
                description: "The globally unique name of the storage account that\
                  \ the desired blob sits within. See <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview\"\
                  \ target=\"_blank\">here</a> for more details."
          - title: "SSH: Secure Shell"
            required:
            - "storage"
            - "user"
            - "host"
            properties:
              host:
                type: "string"
                title: "Host"
              port:
                type: "string"
                title: "Port"
                default: "22"
              user:
                type: "string"
                title: "User"
              storage:
                enum:
                - "SSH"
                type: "string"
                const: "SSH"
                title: "Storage"
                default: "SSH"
              password:
                type: "string"
                title: "Password"
                airbyte_secret: true
          - title: "SCP: Secure copy protocol"
            required:
            - "storage"
            - "user"
            - "host"
            properties:
              host:
                type: "string"
                title: "Host"
              port:
                type: "string"
                title: "Port"
                default: "22"
              user:
                type: "string"
                title: "User"
              storage:
                enum:
                - "SCP"
                type: "string"
                const: "SCP"
                title: "Storage"
                default: "SCP"
              password:
                type: "string"
                title: "Password"
                airbyte_secret: true
          - title: "SFTP: Secure File Transfer Protocol"
            required:
            - "storage"
            - "user"
            - "host"
            properties:
              host:
                type: "string"
                title: "Host"
              port:
                type: "string"
                title: "Port"
                default: "22"
              user:
                type: "string"
                title: "User"
              storage:
                enum:
                - "SFTP"
                type: "string"
                const: "SFTP"
                title: "Storage"
                default: "SFTP"
              password:
                type: "string"
                title: "Password"
                airbyte_secret: true
          - title: "Local Filesystem (limited)"
            required:
            - "storage"
            properties:
              storage:
                enum:
                - "local"
                type: "string"
                const: "local"
                title: "Storage"
                default: "local"
                description: "WARNING: Note that the local storage URL available for\
                  \ reading must start with the local mount \"/local/\" at the moment\
                  \ until we implement more advanced docker mounting options."
          title: "Storage Provider"
          default: "Public Web"
          description: "The storage Provider or Location of the file(s) which should\
            \ be replicated."
        dataset_name:
          type: "string"
          title: "Dataset Name"
          description: "The Name of the final table to replicate this file into (should\
            \ include letters, numbers dash and underscores only)."
        reader_options:
          type: "string"
          title: "Reader Options"
          examples:
          - "{}"
          - "{'sep': ' '}"
          description: "This should be a string in JSON format. It depends on the\
            \ chosen file format to provide additional options and tune its behavior."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "789f8e7a-2d28-11ec-8d3d-0242ac130003"
  name: "Lemlist"
  dockerRepository: "airbyte/source-lemlist"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/source-lemlist"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/source-lemlist"
    connectionSpecification:
      type: "object"
      title: "Lemlist Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      properties:
        api_key:
          type: "string"
          description: "API key to access your lemlist account."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "798ae795-5189-42b6-b64e-3cb91db93338"
  name: "Azure Table Storage"
  dockerRepository: "airbyte/source-azure-table"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/azure-table"
  icon: "azureblobstorage.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "Azure Data Table Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "storage_account_name"
      - "storage_access_key"
      properties:
        storage_access_key:
          type: "string"
          order: 1
          title: "Access Key"
          description: "Azure Table Storage Access Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/azure-table\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        storage_account_name:
          type: "string"
          order: 0
          title: "Account Name"
          description: "The name of your storage account."
          airbyte_secret: false
        storage_endpoint_suffix:
          type: "string"
          order: 2
          title: "Endpoint Suffix"
          default: "core.windows.net"
          examples:
          - "core.windows.net"
          - "core.chinacloudapi.cn"
          description: "Azure Table Storage service account URL suffix. See the <a\
            \ href=\"https://docs.airbyte.io/integrations/sources/azure-table\">docs</a>\
            \ for more information on how to obtain endpoint suffix"
          airbyte_secret: false
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "79c1aa37-dae3-42ae-b333-d1c105477715"
  name: "Zendesk Support"
  dockerRepository: "airbyte/source-zendesk-support"
  dockerImageTag: "0.1.11"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-support"
  icon: "zendesk.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-support"
    connectionSpecification:
      type: "object"
      title: "Source Zendesk Support Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "subdomain"
      - "auth_method"
      properties:
        subdomain:
          type: "string"
          description: "The subdomain for your Zendesk Support"
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-10-15T00:00:00Z"
          description: "The date from which you'd like to replicate data for Zendesk\
            \ Support API, in the format YYYY-MM-DDT00:00:00Z. All data generated\
            \ after this date will be replicated."
        auth_method:
          type: "object"
          oneOf:
          - type: "object"
            title: "API Token"
            required:
            - "email"
            - "api_token"
            properties:
              email:
                type: "string"
                title: "Email"
                description: "The user email for your Zendesk account."
              api_token:
                type: "string"
                title: "API Token"
                description: "The value of the API token generated. See the <a href=\"\
                  https://docs.airbyte.io/integrations/sources/zendesk-support\">docs</a>\
                  \ for more information."
                airbyte_secret: true
              auth_method:
                type: "string"
                const: "api_token"
            additionalProperties: false
          - type: "object"
            title: "OAuth2.0"
            required:
            - "access_token"
            properties:
              auth_method:
                type: "string"
                const: "access_token"
              access_token:
                type: "string"
                title: "Access Token"
                description: "The value of the Access token generated. See the <a\
                  \ href=\"https://docs.airbyte.io/integrations/sources/zendesk-support\"\
                  >docs</a> for more information."
                airbyte_secret: true
            additionalProperties: false
          title: "Authorization Method"
          default: "api_token"
          description: "Zendesk service provides 2 auth method: API token and OAuth2.\
            \ Now only the first one is available. Another one will be added in the\
            \ future."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "7a4327c4-315a-11ec-8d3d-0242ac130003"
  name: "Strava"
  dockerRepository: "airbyte/source-strava"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/strava"
  icon: "strava.svg"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/strava"
    connectionSpecification:
      type: "object"
      title: "Strava Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "athlete_id"
      - "start_date"
      properties:
        auth_type:
          enum:
          - "Client"
          type: "string"
          const: "Client"
          default: "Client"
        client_id:
          type: "string"
          title: "Client ID"
          pattern: "^[0-9_\\-]+$"
          examples:
          - "12345"
          description: "The Client ID of your Strava developer application."
        athlete_id:
          type: "integer"
          title: "Athlete ID"
          pattern: "^[0-9_\\-]+$"
          examples:
          - "17831421"
          description: "The Athlete ID of your Strava developer application."
        start_date:
          type: "string"
          title: "Start Date"
          examples:
          - "2016-12-31 23:59:59"
          description: "UTC date and time. Any data before this date will not be replicated."
        client_secret:
          type: "string"
          title: "Client Secret"
          pattern: "^[0-9a-fA-F]+$"
          examples:
          - "fc6243f283e51f6ca989aab298b17da125496f50"
          description: "The Client Secret of your Strava developer application."
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          pattern: "^[0-9a-fA-F]+$"
          examples:
          - "fc6243f283e51f6ca989aab298b17da125496f50"
          description: "The Refresh Token with the activity: read_all permissions."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "auth_type"
      predicate_value: "Client"
      oauth_config_specification:
        complete_oauth_output_specification:
          type: "object"
          properties:
            refresh_token:
              type: "string"
              path_in_connector_config:
              - "refresh_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "7b86879e-26c5-4ef6-a5ce-2be5c7b46d1e"
  name: "Linnworks"
  dockerRepository: "airbyte/source-linnworks"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/linnworks"
  icon: "linnworks.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/linnworks"
    connectionSpecification:
      type: "object"
      title: "Linnworks Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "application_id"
      - "application_secret"
      - "token"
      - "start_date"
      properties:
        token:
          type: "string"
          title: "API Token"
        start_date:
          type: "string"
          title: "Start Date"
          format: "date-time"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        application_id:
          type: "string"
          title: "Application ID."
          description: "Linnworks Application ID"
        application_secret:
          type: "string"
          title: "Application Secret"
          description: "Linnworks Application Secret"
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "80a54ea2-9959-4040-aac1-eee42423ec9b"
  name: "Monday"
  dockerRepository: "airbyte/source-monday"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/monday"
  icon: "monday.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/monday"
    connectionSpecification:
      type: "object"
      title: "Monday Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required: []
      properties:
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "access_token"
            properties:
              auth_type:
                enum:
                - "oauth2.0"
                type: "string"
                const: "oauth2.0"
                order: 1
                default: "oauth2.0"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your OAuth application."
                airbyte_secret: true
              subdomain:
                type: "string"
                order: 0
                title: "Subdomain/Slug (Optional)"
                default: ""
                description: "Slug/subdomain of the account, or the first part of\
                  \ the URL that comes before .monday.com"
              access_token:
                type: "string"
                title: "Access Token"
                description: "Access Token for making authenticated requests."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your OAuth application."
                airbyte_secret: true
          - type: "object"
            title: "API Token"
            required:
            - "auth_type"
            - "api_token"
            properties:
              api_token:
                type: "string"
                title: "Personal API Token"
                description: "API Token for making authenticated requests."
                airbyte_secret: true
              auth_type:
                enum:
                - "api_token"
                type: "string"
                const: "api_token"
                order: 0
                default: "api_token"
          title: "Authorization Method"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "auth_type"
      predicate_value: "oauth2.0"
      oauth_config_specification:
        oauth_user_input_from_connector_config_specification:
          type: "object"
          properties:
            subdomain:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "subdomain"
          additionalProperties: false
        complete_oauth_output_specification:
          type: "object"
          properties:
            access_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "access_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: true
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "8b3ac13b-f1b1-4644-bec2-e7b6be6d64c4"
  name: "VictorOps"
  dockerRepository: "farosai/airbyte-victorops-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/victorops-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "VictorOps Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "apiId"
      - "apiKey"
      - "cutoff_days"
      properties:
        apiId:
          type: "string"
          title: "API ID"
          description: "VictorOps API ID"
          airbyte_secret: true
        apiKey:
          type: "string"
          title: "VictorOps API key"
          description: "API key for VictorOps API authentication"
          airbyte_secret: true
        pageLimit:
          type: "integer"
          title: "Page Limit"
          default: 100
          description: "VictorOps Page Limit"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        currentPhase:
          type: "string"
          title: "Current Phase"
          default: "triggered,acknowledged,resolved"
          description: "VictorOps Current Phase"
        maxContentLength:
          type: "integer"
          title: "VictorOps Content Length"
          default: 500000
          description: "VictorOps API response content length limit, try increasing\
            \ if 'RequestError' is encountered."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "8d7ef552-2c0f-11ec-8d3d-0242ac130003"
  name: "SearchMetrics"
  dockerRepository: "airbyte/source-search-metrics"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/search-metrics"
  icon: "searchmetrics.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/seacrh-metrics"
    connectionSpecification:
      type: "object"
      title: "Source Search Metrics Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "client_secret"
      - "country_code"
      - "start_date"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: ""
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}[0-9]{2}[0-9]{2}$"
          examples:
          - "20200925"
          description: "Data generated in SearchMetrics after this date will be replicated.\
            \ This date must be specified in the format YYYY-MM-DDT00:00:00Z."
        country_code:
          enum:
          - ""
          - "AR"
          - "AU"
          - "AT"
          - "BE"
          - "BR"
          - "CA"
          - "CN"
          - "CO"
          - "DK"
          - "FI"
          - "FR"
          - "DE"
          - "HK"
          - "IN"
          - "IE"
          - "IT"
          - "JP"
          - "MX"
          - "NL"
          - "NO"
          - "PL"
          - "RU"
          - "SG"
          - "ZA"
          - "ES"
          - "SE"
          - "CH"
          - "TR"
          - "US"
          - "GB"
          type: "string"
          order: 2
          title: "Country Code"
          default: ""
          description: "The region of the S3 staging bucket to use if utilising a\
            \ copy strategy."
        client_secret:
          type: "string"
          title: "Client Secret"
          description: ""
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "8da67652-004c-11ec-9a03-0242ac130003"
  name: "Trello"
  dockerRepository: "airbyte/source-trello"
  dockerImageTag: "0.1.6"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/trello"
  icon: "trelllo.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/trello"
    connectionSpecification:
      type: "object"
      title: "Trello Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "key"
      - "start_date"
      properties:
        key:
          type: "string"
          title: "API key"
          description: "Trello API key. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        token:
          type: "string"
          title: "API token"
          description: "Trello v API token. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        board_ids:
          type: "array"
          items:
            type: "string"
            pattern: "^[0-9a-fA-F]{24}$"
          title: "Trello Board IDs"
          description: "IDs of the boards to replicate data from. If left empty, data\
            \ from all boards to which you have access will be replicated."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$"
          examples:
          - "2021-03-01T00:00:00.000Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "token"
        - - "key"
- sourceDefinitionId: "90916976-a132-4ce9-8bce-82a03dd58788"
  name: "BambooHR"
  dockerRepository: "airbyte/source-bamboo-hr"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/bamboo-hr"
  icon: "bamboohr.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bamboo-hr"
    connectionSpecification:
      type: "object"
      title: "Bamboo HR Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "subdomain"
      - "api_key"
      properties:
        api_key:
          type: "string"
          description: "Api key of bamboo hr"
          airbyte_secret: true
        subdomain:
          type: "string"
          description: "Sub Domain of bamboo hr"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "95e8cffd-b8c4-4039-968e-d32fb4a69bde"
  name: "Klaviyo"
  dockerRepository: "airbyte/source-klaviyo"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/klaviyo"
  icon: "klaviyo.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/klaviyo"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/klaviyo"
    connectionSpecification:
      type: "object"
      title: "Klaviyo Spec"
      required:
      - "api_key"
      - "start_date"
      properties:
        api_key:
          type: "string"
          title: "Api Key"
          description: "Klaviyo API Key. See our <a href=\"https://docs.airbyte.io/integrations/sources/klaviyo\"\
            >docs</a> if you need help finding this key."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- sourceDefinitionId: "983fd355-6bf3-4709-91b5-37afa391eeb6"
  name: "Amazon SQS"
  dockerRepository: "airbyte/source-amazon-sqs"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-sqs"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-sqs"
    connectionSpecification:
      type: "object"
      title: "Amazon SQS Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "queue_url"
      - "region"
      - "delete_messages"
      properties:
        region:
          enum:
          - "us-east-1"
          - "us-east-2"
          - "us-west-1"
          - "us-west-2"
          - "af-south-1"
          - "ap-east-1"
          - "ap-south-1"
          - "ap-northeast-1"
          - "ap-northeast-2"
          - "ap-northeast-3"
          - "ap-southeast-1"
          - "ap-southeast-2"
          - "ca-central-1"
          - "cn-north-1"
          - "cn-northwest-1"
          - "eu-central-1"
          - "eu-north-1"
          - "eu-south-1"
          - "eu-west-1"
          - "eu-west-2"
          - "eu-west-3"
          - "sa-east-1"
          - "me-south-1"
          - "us-gov-east-1"
          - "us-gov-west-1"
          type: "string"
          order: 1
          title: "AWS Region"
          description: "AWS Region of the SQS Queue"
        queue_url:
          type: "string"
          order: 0
          title: "Queue URL"
          examples:
          - "https://sqs.eu-west-1.amazonaws.com/1234567890/my-example-queue"
          description: "URL of the SQS Queue"
        access_key:
          type: "string"
          order: 7
          title: "AWS IAM Access Key ID"
          examples:
          - "xxxxxHRNxxx3TBxxxxxx"
          description: "The Access Key ID of the AWS IAM Role to use for pulling messages"
          airbyte_secret: true
        secret_key:
          type: "string"
          order: 8
          title: "AWS IAM Secret Key"
          examples:
          - "hu+qE5exxxxT6o/ZrKsxxxxxxBhxxXLexxxxxVKz"
          description: "The Secret Key of the AWS IAM Role to use for pulling messages"
          airbyte_secret: true
        max_wait_time:
          type: "integer"
          order: 4
          title: "Max Wait Time"
          examples:
          - "5"
          description: "Max amount of time in seconds to wait for messages in a single\
            \ poll (20 max)"
        max_batch_size:
          type: "integer"
          order: 3
          title: "Max Batch Size"
          examples:
          - "5"
          description: "Max amount of messages to get in one batch (10 max)"
        delete_messages:
          type: "boolean"
          order: 2
          title: "Delete Messages After Read"
          default: false
          description: "If Enabled, messages will be deleted from the SQS Queue after\
            \ being read. If Disabled, messages are left in the queue and can be read\
            \ more than once. WARNING: Enabling this option can result in data loss\
            \ in cases of failure, use with caution, see documentation for more detail. "
        visibility_timeout:
          type: "integer"
          order: 6
          title: "Message Visibility Timeout"
          examples:
          - "15"
          description: "Modify the Visibility Timeout of the individual message from\
            \ the Queue's default (seconds)."
        attributes_to_return:
          type: "string"
          order: 5
          title: "Message Attributes To Return"
          examples:
          - "attr1,attr2"
          description: "Comma separated list of Mesage Attribute names to return"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "9bb85338-ea95-4c93-b267-6be89125b267"
  name: "Freshservice"
  dockerRepository: "airbyte/source-freshservice"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/freshservice"
  icon: "freshdesk.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/freshservice"
    connectionSpecification:
      type: "object"
      title: "Freshservice Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "domain_name"
      - "api_key"
      - "start_date"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: "Freshservice API Key. See <a href=\"https://api.freshservice.com/#authentication\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-10-01T00:00:00Z"
          description: "UTC date and time in the format 2020-10-01T00:00:00Z. Any\
            \ data before this date will not be replicated."
        domain_name:
          type: "string"
          title: "Domain Name"
          examples:
          - "mydomain.freshservice.com"
          description: "The name of your Freshservice domain"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "9bef3b40-e2c3-46c0-a792-54580f876d18"
  name: "GitHub (fork by Faros AI)"
  dockerRepository: "farosai/airbyte-github-source"
  dockerImageTag: "0.0.2"
  documentationUrl: "https://docs.faros.ai"
  spec:
    documentationUrl: "https://docs.airbyte.com/integrations/sources/github"
    connectionSpecification:
      type: "object"
      title: "GitHub Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "repository"
      properties:
        branch:
          type: "string"
          order: 3
          title: "Branch (Optional)"
          examples:
          - "airbytehq/airbyte/master airbytehq/airbyte/my-branch"
          description: "Space-delimited list of GitHub repository branches to pull\
            \ commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified\
            \ for a repository, the default branch will be pulled."
        repository:
          type: "string"
          order: 2
          title: "GitHub Repositories"
          examples:
          - "airbytehq/airbyte airbytehq/another-repo"
          - "airbytehq/*"
          - "airbytehq/airbyte"
          description: "Space-delimited list of GitHub organizations/repositories,\
            \ e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get\
            \ all repositories from organization and `airbytehq/airbyte airbytehq/another-repo`\
            \ for multiple repositories."
        start_date:
          type: "string"
          order: 1
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-03-01T00:00:00Z"
          description: "The date from which you'd like to replicate data from GitHub\
            \ in the format YYYY-MM-DDT00:00:00Z. For the streams which support this\
            \ configuration, only data generated on or after the start date will be\
            \ replicated. This field doesn't apply to all streams, see the <a href=\"\
            https://docs.airbyte.com/integrations/sources/github\">docs</a> for more\
            \ info"
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via GitHub (OAuth)"
            required:
            - "access_token"
            properties:
              access_token:
                type: "string"
                title: "Access Token"
                description: "OAuth access token"
                airbyte_secret: true
              option_title:
                type: "string"
                const: "OAuth Credentials"
                order: 0
          - type: "object"
            title: "Authenticate with Personal Access Token"
            required:
            - "personal_access_token"
            properties:
              option_title:
                type: "string"
                const: "PAT Credentials"
                order: 0
              personal_access_token:
                type: "string"
                title: "Personal Access Tokens"
                description: "Log into GitHub and then generate a <a href=\"https://github.com/settings/tokens\"\
                  > personal access token</a>. To load balance your API quota consumption\
                  \ across multiple API tokens, input multiple tokens separated with\
                  \ \",\""
                airbyte_secret: true
          order: 0
          title: "Authentication *"
          description: "Choose how to authenticate to GitHub"
        page_size_for_large_streams:
          type: "integer"
          order: 4
          title: "Page size for large streams (Optional)"
          default: 30
          maximum: 100
          minimum: 1
          description: "The Github connector contains several streams with a large\
            \ load. The page size of such streams depends on the size of your repository.\
            \ Recommended to specify values between 10 and 30."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "option_title"
      predicate_value: "OAuth Credentials"
      oauth_config_specification:
        complete_oauth_output_specification:
          type: "object"
          properties:
            access_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "access_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "9da77001-af33-4bcd-be46-6252bf9342b9"
  name: "Shopify"
  dockerRepository: "airbyte/source-shopify"
  dockerImageTag: "0.1.27"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/shopify"
  icon: "shopify.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/shopify"
    connectionSpecification:
      type: "object"
      title: "Shopify Source CDK Specifications"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "shop"
      - "start_date"
      - "auth_method"
      properties:
        shop:
          type: "string"
          title: "Shopify Store"
          description: "The name of the shopify store. For https://EXAMPLE.myshopify.com,\
            \ the shop name is 'EXAMPLE'."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "The date you would like to replicate data from. Format: YYYY-MM-DD.\
            \ Any data before this date will not be replicated."
        auth_method:
          type: "object"
          oneOf:
          - type: "object"
            title: "OAuth2.0"
            required:
            - "client_id"
            - "client_secret"
            - "access_token"
            - "auth_method"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of the Shopify developer application."
                airbyte_secret: true
              auth_method:
                enum:
                - "access_token"
                type: "string"
                const: "access_token"
                order: 0
                default: "access_token"
              access_token:
                type: "string"
                title: "Access Token"
                description: "The Access Token for making authenticated requests."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of the Shopify developer application."
                airbyte_secret: true
          - type: "object"
            title: "API Password"
            required:
            - "api_password"
            - "auth_method"
            properties:
              auth_method:
                enum:
                - "api_password"
                type: "string"
                const: "api_password"
                order: 0
                default: "api_password"
              api_password:
                type: "string"
                title: "API Password"
                description: "The API Password for your private application in the\
                  \ `Shopify` store."
                airbyte_secret: true
          title: "Shopify Authorization Method"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "auth_method"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "9e0556f4-69df-4522-a3fb-03264d36b348"
  name: "Marketo"
  dockerRepository: "airbyte/source-marketo"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/marketo"
  icon: "marketo.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/marketo"
    connectionSpecification:
      type: "object"
      title: "Source Marketo Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "domain_url"
      - "client_id"
      - "client_secret"
      - "start_date"
      properties:
        client_id:
          type: "string"
          order: 0
          title: "Client ID"
          description: "The Client ID of your Marketo developer application. See <a\
            \ href=\"https://docs.airbyte.io/integrations/sources/marketo\"> the docs\
            \ </a> for info on how to obtain this."
          airbyte_secret: true
        domain_url:
          type: "string"
          order: 3
          title: "Domain URL"
          examples:
          - "https://000-AAA-000.mktorest.com"
          description: "Your Marketo Base URL. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"\
            > the docs </a> for info on how to obtain this."
          airbyte_secret: true
        start_date:
          type: "string"
          order: 2
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-09-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        client_secret:
          type: "string"
          order: 1
          title: "Client Secret"
          description: "The Client Secret of your Marketo developer application. See\
            \ <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"> the\
            \ docs </a> for info on how to obtain this."
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "9fa5862c-da7c-11eb-8d19-0242ac130003"
  name: "Cockroachdb"
  dockerRepository: "airbyte/source-cockroachdb"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/cockroachdb"
  icon: "cockroachdb.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/cockroachdb"
    connectionSpecification:
      type: "object"
      title: "Cockroach Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      properties:
        ssl:
          type: "boolean"
          order: 5
          title: "Connect using SSL"
          default: false
          description: "Encrypt client/server communications for increased security."
        host:
          type: "string"
          order: 0
          title: "Host"
          description: "Hostname of the database."
        port:
          type: "integer"
          order: 1
          title: "Port"
          default: 5432
          maximum: 65536
          minimum: 0
          examples:
          - "5432"
          description: "Port of the database."
        database:
          type: "string"
          order: 2
          title: "DB Name"
          description: "Name of the database."
        password:
          type: "string"
          order: 4
          title: "Password"
          description: "Password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          order: 3
          title: "User"
          description: "Username to use to access the database."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "a0bb948d-d543-4e2f-9017-21862b59b6c4"
  name: "Phabricator"
  dockerRepository: "farosai/airbyte-phabricator-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/phabricator-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Phabricator Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "server_url"
      - "token"
      - "cutoff_days"
      properties:
        limit:
          type: "integer"
          title: "Limit"
          default: 100
          maximum: 100
          minimum: 1
          description: "Limit of results on a single page fetched from Phabricator"
        token:
          type: "string"
          title: "Conduit Token"
          description: "Conduit Token for Phabricator API authentication"
          airbyte_secret: true
        projects:
          type: "array"
          items:
            type: "string"
          title: "Projects"
          examples:
          - "my_project_1"
          - "my_project_2"
          description: "List of Phabricator projects slugs, e.g. `my_project_1,my_project_2`.\
            \ Slugs are the same as project hashtags. If none provided would sync\
            \ all projects."
        server_url:
          type: "string"
          title: "Phabricator Conduit API URL"
          examples:
          - "https://my-phabricator-server.example.com"
          description: "The API URL for fetching data from Phabricator"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        repositories:
          type: "array"
          items:
            type: "string"
          title: "Repositories"
          examples:
          - "repo-1"
          - "repo-2"
          description: "List of Phabricator repositories, e.g. `repo-1,repo-2`. If\
            \ none provided would sync all repositories."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "aea2fd0d-377d-465e-86c0-4fdc4f688e51"
  name: "Zoom"
  dockerRepository: "airbyte/source-zoom-singer"
  dockerImageTag: "0.2.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zoom"
  icon: "zoom.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zoom"
    connectionSpecification:
      type: "object"
      title: "Source Zoom Singer Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "jwt"
      properties:
        jwt:
          type: "string"
          title: "JWT Token"
          description: "Zoom JWT Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/zoom\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "aed60257-db80-4121-b212-4520807fd94c"
  name: "Backlog"
  dockerRepository: "farosai/airbyte-backlog-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/backlog-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Backlog Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "apiKey"
      - "space"
      - "cutoff_days"
      properties:
        space:
          type: "string"
          title: "SpaceID"
          examples:
          - "devcube"
          description: "Backlog SpaceID"
        apiKey:
          type: "string"
          title: "API Key"
          description: "Backlog API Key"
          airbyte_secret: true
        project_id:
          type:
          - "integer"
          - "null"
          title: "Project ID"
          description: "Only pull issues from this project. If not set, all issues\
            \ from all projects will be pulled."
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "aee89078-5c00-429e-90bf-cec0174dbb76"
  name: "PagerDuty"
  dockerRepository: "farosai/airbyte-pagerduty-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/pagerduty-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "PagerDuty Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      properties:
        token:
          type: "string"
          title: "API key"
          description: "API key for PagerDuty API authentication"
          airbyte_secret: true
        page_size:
          type: "integer"
          title: "Page Size"
          default: 25
          maximum: 25
          minimum: 1
          description: "page size to use when querying PagerDuty API"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Fetch pipelines updated in the last number of days"
        default_severity:
          type: "string"
          title: "Severity category"
          pattern: "^(Sev[0-5])?(Custom)?$"
          examples:
          - "Sev1"
          - "Sev2"
          - "Sev3"
          - "Sev4"
          - "Sev5"
          - "Custom"
          description: "A default severity category if not present"
        incident_log_entries_overview:
          type: "boolean"
          title: "Incident Log Entries Overview"
          default: true
          description: "If true, will return a subset of log entries that show only\
            \ the most important changes to the incident."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "af6d50ee-dddf-4126-a8ee-7faee990774f"
  name: "PostHog"
  dockerRepository: "airbyte/source-posthog"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/posthog"
  icon: "posthog.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/posthog"
    connectionSpecification:
      type: "object"
      title: "PostHog Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "start_date"
      properties:
        api_key:
          type: "string"
          description: "API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/posthog\"\
            >docs</a> for information on how to generate this key."
          airbyte_secret: true
        base_url:
          type: "string"
          default: "https://app.posthog.com"
          examples:
          - "https://posthog.example.com"
          description: "Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com)."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-01T00:00:00Z"
          description: "The date from which you'd like to replicate the data"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "afa734e4-3571-11ec-991a-1e0031268139"
  name: "YouTube Analytics"
  dockerRepository: "airbyte/source-youtube-analytics"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/source-youtube-analytics"
  icon: "youtube.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/youtube-analytics"
    connectionSpecification:
      type: "object"
      title: "YouTube Analytics Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "credentials"
      properties:
        credentials:
          type: "object"
          title: "Authenticate via OAuth 2.0"
          required:
          - "client_id"
          - "client_secret"
          - "refresh_token"
          properties:
            client_id:
              type: "string"
              title: "Client ID"
              description: "The Client ID of your developer application"
              airbyte_secret: true
            client_secret:
              type: "string"
              title: "Client Secret"
              description: "The client secret of your developer application"
              airbyte_secret: true
            refresh_token:
              type: "string"
              title: "Refresh Token"
              description: "A refresh token generated using the above client ID and\
                \ secret"
              airbyte_secret: true
          additionalProperties: false
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "b03a9f3e-22a5-11eb-adc1-0242ac120002"
  name: "Mailchimp"
  dockerRepository: "airbyte/source-mailchimp"
  dockerImageTag: "0.2.10"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/mailchimp"
  icon: "mailchimp.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mailchimp"
    connectionSpecification:
      type: "object"
      title: "Mailchimp Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "username"
      - "apikey"
      properties:
        apikey:
          type: "string"
          title: "API Key"
          description: "Mailchimp API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/mailchimp\"\
            >docs</a> for information on how to generate this key."
          airbyte_secret: true
        username:
          type: "string"
          title: "Username"
          description: "The Username or email you use to sign into Mailchimp."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "b08e4776-d1de-4e80-ab5c-1e51dad934a2"
  name: "Qualaroo"
  dockerRepository: "airbyte/source-qualaroo"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/qualaroo"
  icon: "qualaroo.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/qualaroo"
    connectionSpecification:
      type: "object"
      title: "Qualaroo Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "key"
      - "start_date"
      properties:
        key:
          type: "string"
          title: "API key"
          description: "A Qualaroo token. See the <a href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        token:
          type: "string"
          title: "API token"
          description: "A Qualaroo token. See the <a href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\"\
            >docs</a> for instructions on how to generate it."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$"
          examples:
          - "2021-03-01T00:00:00.000Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        survey_ids:
          type: "array"
          items:
            type: "string"
            pattern: "^[0-9a-fA-F]{24}$"
          title: "Qualaroo survey IDs"
          description: "IDs of the surveys from which you'd like to replicate data.\
            \ If left empty, data from all surveys to which you have access will be\
            \ replicated."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "token"
        - - "key"
- sourceDefinitionId: "b117307c-14b6-41aa-9422-947e34922962"
  name: "Salesforce"
  dockerRepository: "airbyte/source-salesforce"
  dockerImageTag: "0.1.15"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/salesforce"
  icon: "salesforce.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/salesforce"
    connectionSpecification:
      type: "object"
      title: "Salesforce Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      - "api_type"
      properties:
        api_type:
          enum:
          - "BULK"
          - "REST"
          type: "string"
          title: "API Type"
          default: "BULK"
          description: "Unless you know that you are transferring a very small amount\
            \ of data, prefer using the BULK API. This will help avoid using up all\
            \ of your API call quota with Salesforce. Valid values are BULK or REST."
        auth_type:
          type: "string"
          const: "Client"
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Consumer Key that can be found when viewing your app in\
            \ Salesforce"
        is_sandbox:
          type: "boolean"
          title: "Sandbox"
          default: false
          description: "Whether or not the the app is in a Salesforce sandbox. If\
            \ you do not know what this, assume it is false. We provide more info\
            \ on this field in the <a href=\"https://docs.airbyte.io/integrations/destinations/salesforce#is_sandbox\"\
            >docs</a>."
        start_date:
          type: "string"
          title: "Replication Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z|[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-07-25"
          - "2021-07-25T00:00:00Z"
          description: "Date in the format 2017-01-25. Any data before this date will\
            \ not be replicated. This field uses the \"updated\" field if available,\
            \ otherwise the \"created\" fields if they are available for a stream.\
            \ If not set, then by default all your data is replicated."
        wait_timeout:
          type: "integer"
          title: "Response Waiting Time"
          default: 10
          maximum: 60
          minimum: 5
          description: "Maximum wait time of Safesforce responses in minutes. This\
            \ option is used for the BULK mode only"
        client_secret:
          type: "string"
          title: "Client Secret"
          description: "The Consumer Secret that can be found when viewing your app\
            \ in Salesforce"
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "Salesforce Refresh Token used for Airbyte to access your Salesforce\
            \ account. If you don't know what this is, follow this <a href=\"https://medium.com/@bpmmendis94/obtain-access-refresh-tokens-from-salesforce-rest-api-a324fe4ccd9b\"\
            >guide</a> to retrieve it."
          airbyte_secret: true
        streams_criteria:
          type: "array"
          items:
            type: "object"
            required:
            - "criteria"
            - "value"
            properties:
              value:
                type: "string"
                title: "Search value"
              criteria:
                enum:
                - "starts with"
                - "ends with"
                - "contains"
                - "exacts"
                - "starts not with"
                - "ends not with"
                - "not contains"
                - "not exacts"
                type: "string"
                title: "Search criteria"
                default: "contains"
          title: "Streams filter criteria"
          description: "Add selection criteria for streams to get only streams that\
            \ are relevant to you"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "auth_type"
      predicate_value: "Client"
      oauth_config_specification:
        oauth_user_input_from_connector_config_specification:
          type: "object"
          properties:
            is_sandbox:
              type: "boolean"
              path_in_connector_config:
              - "is_sandbox"
          additionalProperties: false
        complete_oauth_output_specification:
          type: "object"
          properties:
            refresh_token:
              type: "string"
              path_in_connector_config:
              - "refresh_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "b2e713cd-cc36-4c0a-b5bd-b47cb8a0561e"
  name: "MongoDb"
  dockerRepository: "airbyte/source-mongodb-v2"
  dockerImageTag: "0.1.10"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/mongodb-v2"
  icon: "mongodb.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/mongodb-v2"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/mongodb-v2"
    connectionSpecification:
      type: "object"
      title: "MongoDb Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "database"
      properties:
        user:
          type: "string"
          order: 2
          title: "User"
          description: "The username which is used to access the database."
        database:
          type: "string"
          order: 1
          title: "Database Name"
          description: "The database you want to replicate."
        password:
          type: "string"
          order: 3
          title: "Password"
          description: "The password associated with this username."
          airbyte_secret: true
        auth_source:
          type: "string"
          order: 4
          title: "Authentication Source"
          default: "admin"
          examples:
          - "admin"
          description: "The authentication source where the user information is stored."
        instance_type:
          type: "object"
          oneOf:
          - title: "Standalone MongoDb Instance"
            required:
            - "instance"
            - "host"
            - "port"
            properties:
              tls:
                type: "boolean"
                order: 2
                title: "TLS Connection"
                default: false
                description: "Indicates whether TLS encryption protocol will be used\
                  \ to connect to MongoDB. It is recommended to use TLS connection\
                  \ if possible. For more information see <a href=\"https://docs.airbyte.io/integrations/sources/mongodb-v2\"\
                  >documentation</a>."
              host:
                type: "string"
                order: 0
                title: "Host"
                description: "The host name of the Mongo database."
              port:
                type: "integer"
                order: 1
                title: "Port"
                default: 27017
                maximum: 65536
                minimum: 0
                examples:
                - "27017"
                description: "The port of the Mongo database."
              instance:
                enum:
                - "standalone"
                type: "string"
                default: "standalone"
          - title: "Replica Set"
            required:
            - "instance"
            - "server_addresses"
            properties:
              instance:
                enum:
                - "replica"
                type: "string"
                default: "replica"
              replica_set:
                type: "string"
                order: 1
                title: "Replica Set"
                description: "A replica set in MongoDB is a group of mongod processes\
                  \ that maintain the same data set."
              server_addresses:
                type: "string"
                order: 0
                title: "Server Addresses"
                examples:
                - "host1:27017,host2:27017,host3:27017"
                description: "The members of a replica set. Please specify `host`:`port`\
                  \ of each member separated by comma."
          - title: "MongoDB Atlas"
            required:
            - "instance"
            - "cluster_url"
            properties:
              instance:
                enum:
                - "atlas"
                type: "string"
                default: "atlas"
              cluster_url:
                type: "string"
                order: 0
                title: "Cluster URL"
                description: "The URL of a cluster to connect to."
            additionalProperties: false
          order: 0
          title: "MongoDb Instance Type"
          description: "The MongoDb instance to connect to. For MongoDB Atlas and\
            \ Replica Set TLS connection is used by default."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "b39a7370-74c3-45a6-ac3a-380d48520a83"
  name: "Oracle DB"
  dockerRepository: "airbyte/source-oracle"
  dockerImageTag: "0.3.11"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/oracle"
  icon: "oracle.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/oracle"
    connectionSpecification:
      type: "object"
      title: "Oracle Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "sid"
      - "username"
      properties:
        sid:
          type: "string"
          title: "SID (Oracle System Identifier)"
        host:
          type: "string"
          title: "Host"
          description: "Hostname of the database."
        port:
          type: "integer"
          title: "Port"
          default: 1521
          maximum: 65536
          minimum: 0
          description: "Port of the database.\nOracle Corporations recommends the\
            \ following port numbers:\n1521 - Default listening port for client connections\
            \ to the listener. \n2484 - Recommended and officially registered listening\
            \ port for client connections to the listener using TCP/IP with SSL"
        schemas:
          type: "array"
          items:
            type: "string"
          title: "Schemas"
          minItems: 1
          description: "The list of schemas to sync from. Defaults to user. Case sensitive."
          uniqueItems: true
        password:
          type: "string"
          title: "Password"
          description: "The password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          title: "User"
          description: "The username which is used to access the database."
        encryption:
          type: "object"
          oneOf:
          - title: "Unencrypted"
            required:
            - "encryption_method"
            properties:
              encryption_method:
                enum:
                - "unencrypted"
                type: "string"
                const: "unencrypted"
                default: "unencrypted"
            description: "Data transfer will not be encrypted."
            additionalProperties: false
          - title: "Native Network Encryption (NNE)"
            required:
            - "encryption_method"
            properties:
              encryption_method:
                enum:
                - "client_nne"
                type: "string"
                const: "client_nne"
                default: "client_nne"
              encryption_algorithm:
                enum:
                - "AES256"
                - "RC4_56"
                - "3DES168"
                type: "string"
                title: "Encryption Algorithm"
                default: "AES256"
                description: "This parameter defines what encryption algorithm is\
                  \ used."
            description: "The native network encryption gives you the ability to encrypt\
              \ database connections, without the configuration overhead of TCP/IP\
              \ and SSL/TLS and without the need to open and listen on different ports."
            additionalProperties: false
          - title: "TLS Encrypted (verify certificate)"
            required:
            - "encryption_method"
            - "ssl_certificate"
            properties:
              ssl_certificate:
                type: "string"
                order: 4
                title: "SSL PEM File"
                multiline: true
                description: "Privacy Enhanced Mail (PEM) files are concatenated certificate\
                  \ containers frequently used in certificate installations."
                airbyte_secret: true
              encryption_method:
                enum:
                - "encrypted_verify_certificate"
                type: "string"
                const: "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
            description: "Verify and use the certificate provided by the server."
            additionalProperties: false
          order: 6
          title: "Encryption"
          description: "The encryption method with is used when communicating with\
            \ the database."
        tunnel_method:
          type: "object"
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                type: "string"
                const: "NO_TUNNEL"
                order: 0
                description: "No ssh tunnel needed to connect to database"
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              ssh_key:
                type: "string"
                order: 4
                title: "SSH Private Key"
                multiline: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                airbyte_secret: true
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
              tunnel_method:
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
              tunnel_method:
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
              tunnel_user_password:
                type: "string"
                order: 4
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                airbyte_secret: true
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "b3f853ee-b848-4651-98cb-52f6c6023bf6"
  name: "Shortcut"
  dockerRepository: "farosai/airbyte-shortcut-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/shortcut-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "shortcut Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "base_url"
      - "version"
      - "token"
      properties:
        token:
          type: "string"
          title: "API Token"
          description: "In order to generate a Workspace specific API token, navigate\
            \ to Settings > Your Account > API Tokens."
          airbyte_secret: true
        version:
          type: "string"
          title: "API Version"
          default: "v3"
          examples:
          - "v3"
          description: "Shortcut API Version"
        base_url:
          type: "string"
          title: "Base API URL"
          default: "https://api.app.shortcut.com"
          examples:
          - "https://api.app.shortcut.com"
          description: "The Base API URL for fetching data from Shortcut"
        project_public_id:
          type: "integer"
          title: "Project Public ID"
          description: "Only pull stories from the specified project. If not set,\
            \ all stories from all projects will be pulled."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "b5ea17b1-f170-46dc-bc31-cc744ca984c1"
  name: "Microsoft SQL Server (MSSQL)"
  dockerRepository: "airbyte/source-mssql"
  dockerImageTag: "0.3.13"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/mssql"
  icon: "mssql.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/destinations/mssql"
    connectionSpecification:
      type: "object"
      title: "MSSQL Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      properties:
        host:
          type: "string"
          title: "Host"
          description: "The hostname of the database."
        port:
          type: "integer"
          title: "Port"
          maximum: 65536
          minimum: 0
          examples:
          - "1433"
          description: "The port of the database."
        database:
          type: "string"
          title: "Database"
          examples:
          - "master"
          description: "The name of the database."
        password:
          type: "string"
          title: "Password"
          description: "The password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          title: "Username"
          description: "The username which is used to access the database."
        ssl_method:
          type: "object"
          oneOf:
          - title: "Unencrypted"
            required:
            - "ssl_method"
            properties:
              ssl_method:
                enum:
                - "unencrypted"
                type: "string"
                const: "unencrypted"
                default: "unencrypted"
            description: "Data transfer will not be encrypted."
            additionalProperties: false
          - title: "Encrypted (trust server certificate)"
            required:
            - "ssl_method"
            properties:
              ssl_method:
                enum:
                - "encrypted_trust_server_certificate"
                type: "string"
                const: "encrypted_trust_server_certificate"
                default: "encrypted_trust_server_certificate"
            description: "Use the certificate provided by the server without verification.\
              \ (For testing purposes only!)"
            additionalProperties: false
          - title: "Encrypted (verify certificate)"
            required:
            - "ssl_method"
            - "trustStoreName"
            - "trustStorePassword"
            properties:
              ssl_method:
                enum:
                - "encrypted_verify_certificate"
                type: "string"
                const: "encrypted_verify_certificate"
                default: "encrypted_verify_certificate"
              hostNameInCertificate:
                type: "string"
                order: 7
                title: "Host Name In Certificate"
                description: "Specifies the host name of the server. The value of\
                  \ this property must match the subject property of the certificate."
            description: "Verify and use the certificate provided by the server."
            additionalProperties: false
          order: 6
          title: "SSL Method"
          description: "The encryption method which is used when communicating with\
            \ the database."
        tunnel_method:
          type: "object"
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                type: "string"
                const: "NO_TUNNEL"
                order: 0
                description: "No ssh tunnel needed to connect to database"
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              ssh_key:
                type: "string"
                order: 4
                title: "SSH Private Key"
                multiline: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                airbyte_secret: true
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
              tunnel_method:
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
              tunnel_method:
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
              tunnel_user_password:
                type: "string"
                order: 4
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                airbyte_secret: true
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
        replication_method:
          enum:
          - "STANDARD"
          - "CDC"
          type: "string"
          title: "Replication Method"
          default: "STANDARD"
          description: "The replication method used for extracting data from the database.\
            \ STANDARD replication requires no setup on the DB side but will not be\
            \ able to represent deletions incrementally. CDC uses {TBC} to detect\
            \ inserts, updates, and deletes. This needs to be configured on the source\
            \ database itself."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "b9dc6155-672e-42ea-b10d-9f1f1fb95ab1"
  name: "Twilio"
  dockerRepository: "airbyte/source-twilio"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/twilio"
  icon: "twilio.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://hub.docker.com/r/airbyte/source-twilio"
    connectionSpecification:
      type: "object"
      title: "Twilio Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "account_sid"
      - "auth_token"
      - "start_date"
      properties:
        auth_token:
          type: "string"
          title: "Auth Token"
          description: "Twilio Auth Token."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Replication Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-10-01T00:00:00Z"
          description: "UTC date and time in the format 2020-10-01T00:00:00Z. Any\
            \ data before this date will not be replicated."
        account_sid:
          type: "string"
          title: "Account ID"
          description: "Twilio account SID"
          airbyte_secret: true
      additionalProperties: false
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- sourceDefinitionId: "bad83517-5e54-4a3d-9b53-63e85fbd4d7c"
  name: "ClickHouse"
  dockerRepository: "airbyte/source-clickhouse"
  dockerImageTag: "0.1.7"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/clickhouse"
  icon: "cliskhouse.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/destinations/clickhouse"
    connectionSpecification:
      type: "object"
      title: "ClickHouse Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      properties:
        ssl:
          type: "boolean"
          title: "SSL Connection"
          default: true
          description: "Encrypt data using SSL."
        host:
          type: "string"
          title: "Host"
          description: "The host endpoint of the Clickhouse cluster."
        port:
          type: "integer"
          title: "Port"
          default: 8123
          maximum: 65536
          minimum: 0
          examples:
          - "8123"
          description: "The port of the database."
        database:
          type: "string"
          title: "Database"
          examples:
          - "default"
          description: "The name of the database."
        password:
          type: "string"
          title: "Password"
          description: "The password associated with this username."
          airbyte_secret: true
        username:
          type: "string"
          title: "Username"
          description: "The username which is used to access the database."
        tunnel_method:
          type: "object"
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                type: "string"
                const: "NO_TUNNEL"
                order: 0
                description: "No ssh tunnel needed to connect to database"
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              ssh_key:
                type: "string"
                order: 4
                title: "SSH Private Key"
                multiline: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                airbyte_secret: true
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
              tunnel_method:
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
              tunnel_method:
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
              tunnel_user_password:
                type: "string"
                order: 4
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                airbyte_secret: true
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "badc5925-0485-42be-8caa-b34096cb71b5"
  name: "SurveyMonkey"
  dockerRepository: "airbyte/source-surveymonkey"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/surveymonkey"
  icon: "surveymonkey.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/surveymonkey"
    connectionSpecification:
      type: "object"
      title: "SurveyMonkey Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z?$"
          examples:
          - "2021-01-01T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        access_token:
          type: "string"
          title: "Access Token"
          description: "Access Token for making authenticated requests. See the <a\
            \ href=\"https://docs.airbyte.io/integrations/sources/surveymonkey\">docs</a>\
            \ for information on how to generate this key."
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "bb1a6d31-6879-4819-a2bd-3eed299ea8e2"
  name: "Cart.com"
  dockerRepository: "airbyte/source-cart"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/cart"
  icon: "cart.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/cart"
    connectionSpecification:
      type: "object"
      title: "Cart.com Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "access_token"
      - "start_date"
      - "store_name"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-01T00:00:00Z"
          description: "The date from which you'd like to replicate the data"
        store_name:
          type: "string"
          title: "Store Name"
          description: "The name of Cart.com Online Store. All API URLs start with\
            \ https://[mystorename.com]/api/v1/, where [mystorename.com] is the domain\
            \ name of your store."
        access_token:
          type: "string"
          title: "Access Token"
          description: "Access Token for making authenticated requests."
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "bb6afd81-87d5-47e3-97c4-e2c2901b1cf8"
  name: "OneSignal"
  dockerRepository: "airbyte/source-onesignal"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/lever-onesignal"
  icon: "onesignal.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/onesignal"
    connectionSpecification:
      type: "object"
      title: "OneSignal Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "user_auth_key"
      - "start_date"
      - "outcome_names"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-11-16T00:00:00Z"
          description: "The date from which you'd like to replicate data for OneSignal\
            \ API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this\
            \ date will be replicated."
        outcome_names:
          type: "string"
          title: "Outcome Names"
          examples:
          - "os__session_duration.count,os__click.count,CustomOutcomeName.sum"
          description: "Comma-separated list of names and the value (sum/count) for\
            \ the returned outcome data. See the <a href=\"https://documentation.onesignal.com/reference/view-outcomes\"\
            >docs</a> for more details"
        user_auth_key:
          type: "string"
          title: "User Auth Key"
          description: "OneSignal User Auth Key, see the <a href=\"https://documentation.onesignal.com/docs/accounts-and-keys#user-auth-key\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "bcea28f0-e643-4269-bf84-8fb27f48b71e"
  name: "Customer.io"
  dockerRepository: "farosai/airbyte-customer-io-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/customer-io-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Customer.io Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "app_api_key"
      - "cutoff_days"
      properties:
        app_api_key:
          type: "string"
          title: "App API Key"
          description: "App API Key for Customer.io API authentication"
          airbyte_secret: true
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "bfd1ddf8-ae8a-4620-b1d7-55597d2ba08c"
  name: "BigQuery"
  dockerRepository: "airbyte/source-bigquery"
  dockerImageTag: "0.1.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/bigquery"
  icon: "bigquery.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/bigquery"
    connectionSpecification:
      type: "object"
      title: "BigQuery Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "project_id"
      - "credentials_json"
      properties:
        dataset_id:
          type: "string"
          title: "Default Dataset ID"
          description: "The dataset ID to search for tables and views. If you are\
            \ only loading data from one dataset, setting this option could result\
            \ in much faster schema discovery."
        project_id:
          type: "string"
          title: "Project ID"
          description: "The GCP project ID for the project containing the target BigQuery\
            \ dataset."
        credentials_json:
          type: "string"
          title: "Credentials JSON"
          description: "The contents of your Service Account Key JSON file. See the\
            \ <a href=\"https://docs.airbyte.io/integrations/sources/bigquery#setup-the-bigquery-source-in-airbyte\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
      additionalProperties: false
    supportsIncremental: true
    supportsNormalization: true
    supportsDBT: true
    supported_destination_sync_modes: []
    supported_sync_modes:
    - "overwrite"
    - "append"
    - "append_dedup"
- sourceDefinitionId: "c2281cee-86f9-4a86-bb48-d23286b4c7bd"
  name: "Slack"
  dockerRepository: "airbyte/source-slack"
  dockerImageTag: "0.1.13"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/slack"
  icon: "slack.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/slack"
    connectionSpecification:
      type: "object"
      title: "Slack Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "lookback_window"
      - "join_channels"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            order: 0
            title: "Sign in via Slack (OAuth)"
            required:
            - "access_token"
            - "client_id"
            - "client_secret"
            - "option_title"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                examples:
                - "slack-client-id-example"
                description: "Slack client_id. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help finding this id."
              access_token:
                type: "string"
                title: "Access token"
                examples:
                - "slack-access-token-example"
                description: "Slack access_token. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help generating the token."
                airbyte_secret: true
              option_title:
                type: "string"
                const: "Default OAuth2.0 authorization"
              client_secret:
                type: "string"
                title: "Client Secret"
                examples:
                - "slack-client-secret-example"
                description: "Slack client_secret. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help finding this secret."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh token"
                examples:
                - "slack-refresh-token-example"
                description: "Slack refresh_token. See our <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> if you need help generating the token."
                airbyte_secret: true
          - type: "object"
            order: 1
            title: "API Token"
            required:
            - "api_token"
            - "option_title"
            properties:
              api_token:
                type: "string"
                title: "API Token"
                description: "A Slack bot token. See the <a href=\"https://docs.airbyte.io/integrations/sources/slack\"\
                  >docs</a> for instructions on how to generate it."
                airbyte_secret: true
              option_title:
                type: "string"
                const: "API Token Credentials"
          title: "Authentication mechanism"
          description: "Choose how to authenticate into Slack"
        join_channels:
          type: "boolean"
          title: "Join all channels"
          default: true
          description: "Whether to join all channels or to sync data only from channels\
            \ the bot is already in.  If false, you'll need to manually add the bot\
            \ to all the channels from which you'd like to sync messages. "
        lookback_window:
          type: "integer"
          title: "Threads Lookback window (Days)"
          examples:
          - 7
          - 14
          description: "How far into the past to look for messages in threads."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- sourceDefinitionId: "c4cfaeda-c757-489a-8aba-859fb08b6970"
  name: "US Census"
  dockerRepository: "airbyte/source-us-census"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/us-census"
  icon: "uscensus.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/us-census"
    connectionSpecification:
      type: "object"
      title: "https://api.census.gov/ Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "query_path"
      properties:
        api_key:
          type: "string"
          description: "Your API Key. Get your key <a href=\"https://api.census.gov/data/key_signup.html\"\
            >here</a>."
          airbyte_secret: true
        query_path:
          type: "string"
          pattern: "^data(\\/[\\w\\d]+)+$"
          examples:
          - "data/2019/cbp"
          - "data/2018/acs"
          - "data/timeseries/healthins/sahie"
          description: "The path portion of the GET request"
        query_params:
          type: "string"
          pattern: "^\\w+=[\\w,:*]+(&(?!key)\\w+=[\\w,:*]+)*$"
          examples:
          - "get=NAME,NAICS2017_LABEL,LFO_LABEL,EMPSZES_LABEL,ESTAB,PAYANN,PAYQTR1,EMP&for=us:*&NAICS2017=72&LFO=001&EMPSZES=001"
          - "get=MOVEDIN,GEOID1,GEOID2,MOVEDOUT,FULL1_NAME,FULL2_NAME,MOVEDNET&for=county:*"
          description: "The query parameters portion of the GET request, without the\
            \ api key"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "c6b0a29e-1da9-4512-9002-7bfd0cba2246"
  name: "Amazon Ads"
  dockerRepository: "airbyte/source-amazon-ads"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-ads"
  icon: "amazonads.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-ads"
    connectionSpecification:
      type: "object"
      title: "Amazon Ads Spec"
      required:
      - "client_id"
      - "client_secret"
      - "refresh_token"
      properties:
        scope:
          name: "Client scope"
          type: "string"
          title: "Scope"
          default: "advertising::campaign_management"
          examples:
          - "cpc_advertising:campaign_management"
          description: "By default its advertising::campaign_management, but customers\
            \ may need to set scope to cpc_advertising:campaign_management."
        region:
          enum:
          - "NA"
          - "EU"
          - "FE"
          - "SANDBOX"
          name: "Region"
          type: "string"
          title: "AmazonAdsRegion"
          default: "NA"
          description: "An enumeration."
        profiles:
          name: "Profile Ids"
          type: "array"
          items:
            type: "integer"
          title: "Profiles"
          description: "profile Ids you want to fetch data for"
        client_id:
          name: "Client ID"
          type: "string"
          title: "Client Id"
          description: "Oauth client id <a href=\"https://advertising.amazon.com/API/docs/en-us/setting-up/step-1-create-lwa-app\"\
            >How to create your Login with Amazon</a>"
        start_date:
          name: "Start date"
          type: "string"
          title: "Start Date"
          examples:
          - "2022-10-10"
          - "2022-10-22"
          description: "Start date for collectiong reports, should not be more than\
            \ 60 days in past. In YYYY-MM-DD format"
        client_secret:
          name: "Client secret"
          type: "string"
          title: "Client Secret"
          description: "Oauth client secret <a href=\"https://advertising.amazon.com/API/docs/en-us/setting-up/step-1-create-lwa-app\"\
            >How to create your Login with Amazon</a>"
          airbyte_secret: true
        refresh_token:
          name: "Oauth refresh token"
          type: "string"
          title: "Refresh Token"
          description: "Oauth 2.0 refresh_token, <a href=\"https://developer.amazon.com/docs/login-with-amazon/conceptual-overview.html\"\
            >read details here</a>"
          airbyte_secret: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "c8630570-086d-4a40-99ae-ea5b18673071"
  name: "Zendesk Talk"
  dockerRepository: "airbyte/source-zendesk-talk"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-talk"
  icon: "zendesk.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zendesk-talk"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/zendesk-talk"
    connectionSpecification:
      type: "object"
      title: "Zendesk Talk Spec"
      required:
      - "subdomain"
      - "access_token"
      - "email"
      - "start_date"
      properties:
        email:
          type: "string"
          title: "Email"
          description: "The user email for your Zendesk account."
        subdomain:
          type: "string"
          title: "Subdomain"
          description: "The subdomain for your Zendesk Talk."
        start_date:
          type: "string"
          title: "Replication Start Date"
          format: "date-time"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$"
          examples:
          - "2017-01-25T00:00:00Z"
          - "2017-01-25"
          description: "The date/datetime from which you'd like to replicate data\
            \ for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. The time part\
            \ is optional."
        access_token:
          type: "string"
          title: "Access Token"
          description: "The value of the API token generated. See the <a href=\"https://docs.airbyte.io/integrations/sources/zendesk-talk\"\
            >docs</a> for more information."
          airbyte_secret: true
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
- sourceDefinitionId: "cc88c43f-6f53-4e8a-8c4d-b284baaf9635"
  name: "Delighted"
  dockerRepository: "airbyte/source-delighted"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/delighted"
  icon: "delighted.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "Delighted Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "since"
      - "api_key"
      properties:
        since:
          type: "integer"
          examples:
          - 1625328167
          description: "An Unix timestamp to retrieve records created on or after\
            \ this time."
        api_key:
          type: "string"
          description: "A Delighted API key."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "cd06e646-31bf-4dc8-af48-cbc6530fcad3"
  name: "Kustomer"
  dockerRepository: "airbyte/source-kustomer-singer"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/kustomer"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/kustomer"
    connectionSpecification:
      type: "object"
      title: "Source Kustomer Singer Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_token"
      - "start_date"
      properties:
        api_token:
          type: "string"
          description: "Kustomer API Token. See the <a href=\"https://developer.kustomer.com/kustomer-api-docs/reference/authentication\"\
            >docs</a> on how to obtain this"
          airbyte_secret: true
        start_date:
          type: "string"
          examples:
          - "2019-01-01T00:00:00Z"
          description: "The date from which you'd like to replicate the data"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "cd42861b-01fc-4658-a8ab-5d11d0510f01"
  name: "Recurly"
  dockerRepository: "airbyte/source-recurly"
  dockerImageTag: "0.3.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/recurly"
  icon: "recurly.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/recurly"
    connectionSpecification:
      type: "object"
      title: "Recurly Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      properties:
        api_key:
          type: "string"
          description: "Recurly API Key. See the  <a href=\"https://docs.airbyte.io/integrations/sources/recurly\"\
            >docs</a> for more information on how to generate this key."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "cdaf146a-9b75-49fd-9dd2-9d64a0bb4781"
  name: "Sentry"
  dockerRepository: "airbyte/source-sentry"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/sentry"
  icon: "sentry.svg"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/sentry"
    connectionSpecification:
      type: "object"
      title: "Sentry Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "auth_token"
      - "organization"
      - "project"
      properties:
        project:
          type: "string"
          title: "Project"
          description: "The name (slug) of the Project you want to sync."
        hostname:
          type: "string"
          title: "Host Name"
          default: "sentry.io"
          description: "Host name of Sentry API server.For self-hosted, specify your\
            \ host name here. Otherwise, leave it empty."
        auth_token:
          type: "string"
          title: "Authentication Tokens"
          description: "Log into Sentry and then <a href=\"https://sentry.io/settings/account/api/auth-tokens/\"\
            >create authentication tokens</a>.For self-hosted, you can find or create\
            \ authentication tokens by visiting \"{instance_url_prefix}/settings/account/api/auth-tokens/\""
          airbyte_secret: true
        organization:
          type: "string"
          title: "Organization"
          description: "The slug of the organization the groups belong to."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "d0243522-dccf-4978-8ba0-37ed47a0bdbf"
  name: "Asana"
  dockerRepository: "airbyte/source-asana"
  dockerImageTag: "0.1.3"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/asana"
  icon: "asana.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "Asana Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      properties:
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate with Personal Access Token"
            required:
            - "personal_access_token"
            properties:
              option_title:
                type: "string"
                const: "PAT Credentials"
                title: "Credentials title"
                description: "PAT Credentials"
              personal_access_token:
                type: "string"
                title: "Personal Access Token"
                description: "Asana Personal Access Token (generate yours <a href=\"\
                  https://app.asana.com/0/developer-console\">here</a>)."
                airbyte_secret: true
          - type: "object"
            title: "Authenticate via Asana (Oauth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              client_id:
                type: "string"
                title: ""
                description: ""
                airbyte_secret: true
              option_title:
                type: "string"
                const: "OAuth Credentials"
                title: "Credentials title"
                description: "OAuth Credentials"
              client_secret:
                type: "string"
                title: ""
                description: ""
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: ""
                description: ""
                airbyte_secret: true
          title: "Authentication mechanism"
          description: "Choose how to authenticate to Github"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "1"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "d19ae824-e289-4b14-995a-0632eb46d246"
  name: "Google Directory"
  dockerRepository: "airbyte/source-google-directory"
  dockerImageTag: "0.1.9"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/google-directory"
  icon: "googledirectory.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-directory"
    connectionSpecification:
      type: "object"
      title: "Google Directory Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required: []
      properties:
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Sign in via Google (OAuth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of the developer application."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client secret"
                description: "The Client Secret of the developer application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "The Token for obtaining a new access token."
                airbyte_secret: true
              credentials_title:
                enum:
                - "Web server app"
                type: "string"
                const: "Web server app"
                order: 0
                title: "Credentials Title"
                default: "Web server app"
                description: "Authentication Scenario"
            description: "For these scenario user only needs to give permission to\
              \ read Google Directory data."
          - type: "object"
            title: "Service Account Key"
            required:
            - "credentials_json"
            - "email"
            properties:
              email:
                type: "string"
                title: "Email"
                description: "The email of the user, which has permissions to access\
                  \ the Google Workspace Admin APIs."
              credentials_json:
                type: "string"
                title: "Credentials JSON"
                description: "The contents of the JSON service account key. See the\
                  \ <a href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation\"\
                  >docs</a> for more information on how to generate this key."
                airbyte_secret: true
              credentials_title:
                enum:
                - "Service accounts"
                type: "string"
                const: "Service accounts"
                order: 0
                title: "Credentials Title"
                default: "Service accounts"
                description: "Authentication Scenario"
            description: "For these scenario user should obtain service account's\
              \ credentials from the Google API Console and provide delegated email."
          title: "Google Credentials"
          description: "Google APIs use the OAuth 2.0 protocol for authentication\
            \ and authorization. The Source supports <a href=\"https://developers.google.com/identity/protocols/oauth2#webserver\"\
            \ target=\"_blank\">Web server application</a> and <a href=\"https://developers.google.com/identity/protocols/oauth2#serviceaccount\"\
            \ target=\"_blank\">Service accounts</a> scenarios."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "d1aa448b-7c54-498e-ad95-263cbebcd2db"
  name: "Tempo"
  dockerRepository: "airbyte/source-tempo"
  dockerImageTag: "0.2.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/tempo"
  icon: "tempo.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/"
    connectionSpecification:
      type: "object"
      title: "Tempo Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_token"
      properties:
        api_token:
          type: "string"
          title: "API token"
          description: "Tempo API Token. Go to Tempo>Settings, scroll down to Data\
            \ Access and select API integration."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "d60a46d4-709f-4092-a6b7-2457f7d455f5"
  name: "Prestashop"
  dockerRepository: "airbyte/source-prestashop"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/presta-shop"
  icon: "prestashop.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "PrestaShop Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "url"
      - "access_key"
      properties:
        url:
          type: "string"
          description: "Shop URL without trailing slash (domain name or IP address)"
        access_key:
          type: "string"
          description: "Your PrestaShop access key. See <a href=\"https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/#create-an-access-key\"\
            > the docs </a> for info on how to obtain this."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "d8286229-c680-4063-8c59-23b9b391c700"
  name: "Pipedrive"
  dockerRepository: "airbyte/source-pipedrive"
  dockerImageTag: "0.1.9"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/pipedrive"
  icon: "pipedrive.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/pipedrive"
    connectionSpecification:
      type: "object"
      title: "Pipedrive Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "replication_start_date"
      properties:
        authorization:
          type: "object"
          oneOf:
          - type: "object"
            title: "Sign in via Pipedrive (OAuth)"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                enum:
                - "Client"
                type: "string"
                const: "Client"
                order: 0
                default: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Pipedrive developer application."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Pipedrive developer application"
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "The token for obtaining the new access token."
                airbyte_secret: true
          - type: "object"
            title: "API Key Authentication"
            required:
            - "auth_type"
            - "api_token"
            properties:
              api_token:
                type: "string"
                title: "API Token"
                description: "The Pipedrive API Token."
                airbyte_secret: true
              auth_type:
                enum:
                - "Token"
                type: "string"
                const: "Token"
                order: 0
                default: "Token"
          title: "Authentication Type"
          description: "Choose one of the possible authorization method"
        replication_start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated. When specified and not\
            \ None, then stream will behave as incremental"
      additionalProperties: true
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "authorization"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
- sourceDefinitionId: "d8313939-3782-41b0-be29-b3ca20d8dd3a"
  name: "Intercom"
  dockerRepository: "airbyte/source-intercom"
  dockerImageTag: "0.1.12"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/intercom"
  icon: "intercom.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/intercom"
    connectionSpecification:
      type: "object"
      title: "Source Intercom Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "access_token"
      properties:
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-11-16T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        access_token:
          type: "string"
          title: "Access Token"
          description: "Access Token for making authenticated requests. See the <a\
            \ href=\"https://docs.airbyte.io/integrations/sources/intercom\">docs</a>\
            \ for more information on how to obtain this key manually."
          airbyte_secret: true
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "d8540a80-6120-485d-b7d6-272bca477d9b"
  name: "OpenWeather"
  dockerRepository: "airbyte/source-openweather"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/openweather"
  sourceType: "api"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "Open Weather Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "appid"
      - "lat"
      - "lon"
      properties:
        lat:
          type: "string"
          title: "Latitude"
          pattern: "^[-]?\\d{1,2}(\\.\\d+)?$"
          examples:
          - "45.7603"
          - "-21.249107858038816"
          description: "Latitude for which you want to get weather condition from.\
            \ (min -90, max 90)"
        lon:
          type: "string"
          title: "Longitude"
          pattern: "^[-]?\\d{1,3}(\\.\\d+)?$"
          examples:
          - "4.835659"
          - "-70.39482074115321"
          description: "Longitude for which you want to get weather condition from.\
            \ (min -180, max 180)"
        lang:
          enum:
          - "af"
          - "al"
          - "ar"
          - "az"
          - "bg"
          - "ca"
          - "cz"
          - "da"
          - "de"
          - "el"
          - "en"
          - "eu"
          - "fa"
          - "fi"
          - "fr"
          - "gl"
          - "he"
          - "hi"
          - "hr"
          - "hu"
          - "id"
          - "it"
          - "ja"
          - "kr"
          - "la"
          - "lt"
          - "mk"
          - "no"
          - "nl"
          - "pl"
          - "pt"
          - "pt_br"
          - "ro"
          - "ru"
          - "sv"
          - "se"
          - "sk"
          - "sl"
          - "sp"
          - "es"
          - "sr"
          - "th"
          - "tr"
          - "ua"
          - "uk"
          - "vi"
          - "zh_cn"
          - "zh_tw"
          - "zu"
          type: "string"
          title: "Language"
          examples:
          - "en"
          - "fr"
          - "pt_br"
          - "uk"
          - "zh_cn"
          - "zh_tw"
          description: "You can use lang parameter to get the output in your language.\
            \ The contents of the description field will be translated. See <a href=\"\
            https://openweathermap.org/api/one-call-api#multi\">here</a> for the list\
            \ of supported languages."
        appid:
          type: "string"
          title: "App ID"
          description: "Your OpenWeather API Key. See <a href=\"https://openweathermap.org/api\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
        units:
          enum:
          - "standard"
          - "metric"
          - "imperial"
          type: "string"
          title: "Units"
          examples:
          - "standard"
          - "metric"
          - "imperial"
          description: "Units of measurement. standard, metric and imperial units\
            \ are available. If you do not use the units parameter, standard units\
            \ will be applied by default."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "d8d05baf-bbda-49b3-9489-542e77cbd820"
  name: "Harness"
  dockerRepository: "farosai/airbyte-harness-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/harness-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Harness Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "account_id"
      - "cutoff_days"
      properties:
        api_key:
          type: "string"
          title: "API key"
          airbyte_secret: true
        api_url:
          type: "string"
          title: "API URL"
          default: "https://app.harness.io"
          examples:
          - "https://my-harness-server.example.com"
          description: "The API URL for fetching data from Harness"
        page_size:
          type: "integer"
          title: "Page Size"
          default: 100
          description: "number of pipelines (builds) to fetch per call"
        account_id:
          type: "string"
          title: "Account ID"
          description: "Harness Account ID"
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch deployments updated after cutoff"
        deployment_timeout:
          type: "integer"
          title: "Deployment Timeout"
          default: 24
          description: "Max number of hours to consider for a deployment to be running/queued\
            \ before giving up on syncing it"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "d913b0f2-cc51-4e55-a44c-8ba1697b9239"
  name: "Paypal Transaction"
  dockerRepository: "airbyte/source-paypal-transaction"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/paypal-transaction"
  icon: "paypal.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/paypal-transactions"
    connectionSpecification:
      type: "object"
      title: "Paypal Transaction Search"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_id"
      - "secret"
      - "start_date"
      - "is_sandbox"
      properties:
        secret:
          type: "string"
          title: "Client Secret"
          description: "The Client Secret of your Paypal developer application."
          airbyte_secret: true
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Client ID of your Paypal developer application."
        is_sandbox:
          type: "boolean"
          title: "Sandbox"
          default: false
          description: "Determines whether to use the sandbox or production environment."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
          examples:
          - "2021-06-11T23:59:59-00:00"
          description: "Start Date for data extraction in <a href=\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\"\
            >ISO format</a>. Date must be in range from 3 years till 12 hrs before\
            \ present time."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "d917a47b-8537-4d0d-8c10-36a9928d4265"
  name: "Kafka"
  dockerRepository: "airbyte/source-kafka"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/kafka"
  icon: "kafka.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/kafka"
    connectionSpecification:
      type: "object"
      title: "Kafka Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "bootstrap_servers"
      - "subscription"
      - "protocol"
      properties:
        group_id:
          type: "string"
          title: "Group ID"
          examples:
          - "group.id"
          description: "The Group ID is how you distinguish different consumer groups."
        protocol:
          type: "object"
          oneOf:
          - title: "PLAINTEXT"
            required:
            - "security_protocol"
            properties:
              security_protocol:
                enum:
                - "PLAINTEXT"
                type: "string"
                default: "PLAINTEXT"
          - title: "SASL PLAINTEXT"
            required:
            - "security_protocol"
            - "sasl_mechanism"
            - "sasl_jaas_config"
            properties:
              sasl_mechanism:
                enum:
                - "PLAIN"
                type: "string"
                title: "SASL Mechanism"
                default: "PLAIN"
                description: "The SASL mechanism used for client connections. This\
                  \ may be any mechanism for which a security provider is available."
              sasl_jaas_config:
                type: "string"
                title: "SASL JAAS Config"
                default: ""
                description: "The JAAS login context parameters for SASL connections\
                  \ in the format used by JAAS configuration files."
                airbyte_secret: true
              security_protocol:
                enum:
                - "SASL_PLAINTEXT"
                type: "string"
                default: "SASL_PLAINTEXT"
          - title: "SASL SSL"
            required:
            - "security_protocol"
            - "sasl_mechanism"
            - "sasl_jaas_config"
            properties:
              sasl_mechanism:
                enum:
                - "GSSAPI"
                - "OAUTHBEARER"
                - "SCRAM-SHA-256"
                type: "string"
                title: "SASL Mechanism"
                default: "GSSAPI"
                description: "The SASL mechanism used for client connections. This\
                  \ may be any mechanism for which a security provider is available."
              sasl_jaas_config:
                type: "string"
                title: "SASL JAAS Config"
                default: ""
                description: "The JAAS login context parameters for SASL connections\
                  \ in the format used by JAAS configuration files."
                airbyte_secret: true
              security_protocol:
                enum:
                - "SASL_SSL"
                type: "string"
                default: "SASL_SSL"
          title: "Protocol"
          description: "The Protocol used to communicate with brokers."
        client_id:
          type: "string"
          title: "Client ID"
          examples:
          - "airbyte-consumer"
          description: "An ID string to pass to the server when making requests. The\
            \ purpose of this is to be able to track the source of requests beyond\
            \ just ip/port by allowing a logical application name to be included in\
            \ server-side request logging."
        test_topic:
          type: "string"
          title: "Test Topic"
          examples:
          - "test.topic"
          description: "The Topic to test in case the Airbyte can consume messages."
        subscription:
          type: "object"
          oneOf:
          - title: "Manually assign a list of partitions"
            required:
            - "subscription_type"
            - "topic_partitions"
            properties:
              topic_partitions:
                type: "string"
                title: "List of topic:partition Pairs"
                examples:
                - "sample.topic:0, sample.topic:1"
              subscription_type:
                enum:
                - "assign"
                type: "string"
                const: "assign"
                default: "assign"
                description: "Manually assign a list of partitions to this consumer.\
                  \ This interface does not allow for incremental assignment and will\
                  \ replace the previous assignment (if there is one).\nIf the given\
                  \ list of topic partitions is empty, it is treated the same as unsubscribe()."
          - title: "Subscribe to all topics matching specified pattern"
            required:
            - "subscription_type"
            - "topic_pattern"
            properties:
              topic_pattern:
                type: "string"
                title: "Topic Pattern"
                examples:
                - "sample.topic"
              subscription_type:
                enum:
                - "subscribe"
                type: "string"
                const: "subscribe"
                default: "subscribe"
                description: "The Topic pattern from which the records will be read."
          title: "Subscription Method"
          description: "You can choose to manually assign a list of partitions, or\
            \ subscribe to all topics matching specified pattern to get dynamically\
            \ assigned partitions."
        repeated_calls:
          type: "integer"
          title: "Repeated Calls"
          default: 3
          description: "The number of repeated calls to poll() if no messages were\
            \ received."
        max_poll_records:
          type: "integer"
          title: "Max Poll Records"
          default: 500
          description: "The maximum number of records returned in a single call to\
            \ poll(). Note, that max_poll_records does not impact the underlying fetching\
            \ behavior. The consumer will cache the records from each fetch request\
            \ and returns them incrementally from each poll."
        retry_backoff_ms:
          type: "integer"
          title: "Retry Backoff, ms"
          default: 100
          description: "The amount of time to wait before attempting to retry a failed\
            \ request to a given topic partition. This avoids repeatedly sending requests\
            \ in a tight loop under some failure scenarios."
        auto_offset_reset:
          enum:
          - "latest"
          - "earliest"
          - "none"
          type: "string"
          title: "Auto Offset Reset"
          default: "latest"
          description: "What to do when there is no initial offset in Kafka or if\
            \ the current offset does not exist any more on the server - earliest:\
            \ automatically reset the offset to the earliest offset, latest: automatically\
            \ reset the offset to the latest offset, none: throw exception to the\
            \ consumer if no previous offset is found for the consumer's group, anything\
            \ else: throw exception to the consumer."
        bootstrap_servers:
          type: "string"
          title: "Bootstrap Servers"
          examples:
          - "kafka-broker1:9092,kafka-broker2:9092"
          description: "A list of host/port pairs to use for establishing the initial\
            \ connection to the Kafka cluster. The client will make use of all servers\
            \ irrespective of which servers are specified here for bootstrapping&mdash;this\
            \ list only impacts the initial hosts used to discover the full set of\
            \ servers. This list should be in the form <code>host1:port1,host2:port2,...</code>.\
            \ Since these servers are just used for the initial connection to discover\
            \ the full cluster membership (which may change dynamically), this list\
            \ need not contain the full set of servers (you may want more than one,\
            \ though, in case a server is down)."
        client_dns_lookup:
          enum:
          - "default"
          - "use_all_dns_ips"
          - "resolve_canonical_bootstrap_servers_only"
          type: "string"
          title: "Client DNS Lookup"
          default: "use_all_dns_ips"
          description: "Controls how the client uses DNS lookups. If set to use_all_dns_ips,\
            \ connect to each returned IP address in sequence until a successful connection\
            \ is established. After a disconnection, the next IP is used. Once all\
            \ IPs have been used once, the client resolves the IP(s) from the hostname\
            \ again. If set to resolve_canonical_bootstrap_servers_only, resolve each\
            \ bootstrap address into a list of canonical names. After the bootstrap\
            \ phase, this behaves the same as use_all_dns_ips. If set to default (deprecated),\
            \ attempt to connect to the first IP address returned by the lookup, even\
            \ if the lookup returns multiple IP addresses."
        enable_auto_commit:
          type: "boolean"
          title: "Enable Auto Commit"
          default: true
          description: "If true, the consumer's offset will be periodically committed\
            \ in the background."
        request_timeout_ms:
          type: "integer"
          title: "Request Timeout, ms"
          default: 30000
          description: "The configuration controls the maximum amount of time the\
            \ client will wait for the response of a request. If the response is not\
            \ received before the timeout elapses the client will resend the request\
            \ if necessary or fail the request if retries are exhausted."
        receive_buffer_bytes:
          type: "integer"
          title: "Receive Buffer, bytes"
          default: 32768
          description: "The size of the TCP receive buffer (SO_RCVBUF) to use when\
            \ reading data. If the value is -1, the OS default will be used."
        auto_commit_interval_ms:
          type: "integer"
          title: "Auto Commit Interval, ms"
          default: 5000
          description: "The frequency in milliseconds that the consumer offsets are\
            \ auto-committed to Kafka if enable.auto.commit is set to true."
      additionalProperties: false
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    supported_source_sync_modes:
    - "append"
- sourceDefinitionId: "db04ecd1-42e7-4115-9cec-95812905c626"
  name: "Retently"
  dockerRepository: "airbyte/source-retently"
  dockerImageTag: "0.1.2"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/retently"
  icon: "retently.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docsurl.com"
    connectionSpecification:
      type: "object"
      title: "Retently Api Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      properties:
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Retently (OAuth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                enum:
                - "Client"
                type: "string"
                const: "Client"
                order: 0
                default: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Retently developer application."
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Retently developer application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "Retently Refresh Token which can be used to fetch new\
                  \ Bearer Tokens when the current one expires."
                airbyte_secret: true
            additionalProperties: false
          - type: "object"
            title: "Authenticate with API Token"
            required:
            - "api_key"
            properties:
              api_key:
                type: "string"
                title: "API Token"
                description: "Retently API Token. See the <a href=\"https://app.retently.com/settings/api/tokens\"\
                  >docs</a> for more information on how to obtain this key."
                airbyte_secret: true
              auth_type:
                enum:
                - "Token"
                type: "string"
                const: "Token"
                order: 0
                default: "Token"
            additionalProperties: false
          title: "Authentication Mechanism"
          description: "Choose how to authenticate to Retently"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "auth_type"
      predicate_value: "Client"
      oauth_config_specification:
        complete_oauth_output_specification:
          type: "object"
          properties:
            refresh_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "refresh_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "dcb04367-398c-4af9-831c-aef0ce4f8f32"
  name: "Squadcast"
  dockerRepository: "farosai/airbyte-squadcast-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/squadcast-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "SquadCast Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "cutoff_days"
      properties:
        token:
          type: "string"
          title: "Token"
          description: "Get API Refresh Token on https://app.squadcast.com/user/USER_ID\
            \ where USER_ID is user's ID"
          airbyte_secret: true
        cutoff_days:
          type: "integer"
          title: "Cutoff Days"
          default: 90
          description: "Only fetch data updated after cutoff"
        event_deduped:
          type: "boolean"
          title: "Events Deduped"
          description: "If set to true, it will return only the deduped events. If\
            \ set to false, it will return only the non-deduped event. Otherwise it\
            \ will return all the events"
        event_owner_id:
          type: "string"
          title: "Event Owner ID"
          description: "Team ID or User ID"
        event_incident_id:
          type: "string"
          title: "Events Incident ID"
          description: "If set it will pull all events from only this Incident. If\
            \ no it pull all events from all incidents"
        incident_owner_id:
          type: "string"
          title: "Incident Owner ID"
          description: "Team ID or User ID"
        max_content_length:
          type: "integer"
          title: "Max Content Length"
          default: 20000
          description: "Max size of Squadcast API response content in bytes. Increase\
            \ this value if you get a \"maxContentLength exceeded\" error"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "decd338e-5647-4c0b-adf4-da0e75f5a750"
  name: "Postgres"
  dockerRepository: "airbyte/source-postgres"
  dockerImageTag: "0.4.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/postgres"
  icon: "postgresql.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/postgres"
    connectionSpecification:
      type: "object"
      title: "Postgres Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      properties:
        ssl:
          type: "boolean"
          order: 5
          title: "Connect using SSL"
          default: false
          description: "Encrypt client/server communications for increased security."
        host:
          type: "string"
          order: 0
          title: "Host"
          description: "Hostname of the database."
        port:
          type: "integer"
          order: 1
          title: "Port"
          default: 5432
          maximum: 65536
          minimum: 0
          examples:
          - "5432"
          description: "Port of the database."
        database:
          type: "string"
          order: 2
          title: "DB Name"
          description: "Name of the database."
        password:
          type: "string"
          order: 4
          title: "Password"
          description: "Password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          order: 3
          title: "User"
          description: "Username to use to access the database."
        tunnel_method:
          type: "object"
          oneOf:
          - title: "No Tunnel"
            required:
            - "tunnel_method"
            properties:
              tunnel_method:
                type: "string"
                const: "NO_TUNNEL"
                order: 0
                description: "No ssh tunnel needed to connect to database"
          - title: "SSH Key Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "ssh_key"
            properties:
              ssh_key:
                type: "string"
                order: 4
                title: "SSH Private Key"
                multiline: true
                description: "OS-level user account ssh key credentials in RSA PEM\
                  \ format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )"
                airbyte_secret: true
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host."
              tunnel_method:
                type: "string"
                const: "SSH_KEY_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and ssh key"
          - title: "Password Authentication"
            required:
            - "tunnel_method"
            - "tunnel_host"
            - "tunnel_port"
            - "tunnel_user"
            - "tunnel_user_password"
            properties:
              tunnel_host:
                type: "string"
                order: 1
                title: "SSH Tunnel Jump Server Host"
                description: "Hostname of the jump server host that allows inbound\
                  \ ssh tunnel."
              tunnel_port:
                type: "integer"
                order: 2
                title: "SSH Connection Port"
                default: 22
                maximum: 65536
                minimum: 0
                examples:
                - "22"
                description: "Port on the proxy/jump server that accepts inbound ssh\
                  \ connections."
              tunnel_user:
                type: "string"
                order: 3
                title: "SSH Login Username"
                description: "OS-level username for logging into the jump server host"
              tunnel_method:
                type: "string"
                const: "SSH_PASSWORD_AUTH"
                order: 0
                description: "Connect through a jump server tunnel host using username\
                  \ and password authentication"
              tunnel_user_password:
                type: "string"
                order: 4
                title: "Password"
                description: "OS-level password for logging into the jump server host"
                airbyte_secret: true
          title: "SSH Tunnel Method"
          description: "Whether to initiate an SSH tunnel before connecting to the\
            \ database, and if so, which kind of authentication to use."
        replication_method:
          type: "object"
          oneOf:
          - title: "Standard"
            required:
            - "method"
            properties:
              method:
                enum:
                - "Standard"
                type: "string"
                const: "Standard"
                order: 0
                default: "Standard"
            description: "Standard replication requires no setup on the DB side but\
              \ will not be able to represent deletions incrementally."
            additionalProperties: false
          - title: "Logical Replication (CDC)"
            required:
            - "method"
            - "replication_slot"
            - "publication"
            properties:
              method:
                enum:
                - "CDC"
                type: "string"
                const: "CDC"
                order: 0
                default: "CDC"
              plugin:
                enum:
                - "pgoutput"
                - "wal2json"
                type: "string"
                order: 1
                default: "pgoutput"
                description: "A logical decoding plug-in installed on the PostgreSQL\
                  \ server. `pgoutput` plug-in is used by default.\nIf replication\
                  \ table contains a lot of big jsonb values it is recommended to\
                  \ use `wal2json` plug-in. For more information about `wal2json`\
                  \ plug-in read <a href=\"https://docs.airbyte.io/integrations/sources/postgres\"\
                  >Postgres Source</a> docs."
              publication:
                type: "string"
                order: 3
                description: "A Postgres publication used for consuming changes."
              replication_slot:
                type: "string"
                order: 2
                description: "A plug-in logical replication slot."
            description: "Logical replication uses the Postgres write-ahead log (WAL)\
              \ to detect inserts, updates, and deletes. This needs to be configured\
              \ on the source database itself. Only available on Postgres 10 and above.\
              \ Read the <a href=\"https://docs.airbyte.io/integrations/sources/postgres\"\
              >Postgres Source</a> docs for more information."
            additionalProperties: false
          order: 6
          title: "Replication Method"
          description: "Replication method to use for extracting data from the database."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "dfffecb7-9a13-43e9-acdc-b92af7997ca9"
  name: "Close.com"
  dockerRepository: "airbyte/source-close-com"
  dockerImageTag: "0.1.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/close-com"
  icon: "close.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/close-com"
    connectionSpecification:
      type: "object"
      title: "Close.com Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      properties:
        api_key:
          type: "string"
          description: "Close.com API key (usually starts with 'api_'; find yours\
            \ <a href=\"https://app.close.com/settings/api/\">here</a>)."
          airbyte_secret: true
        start_date:
          type: "string"
          default: "2021-01-01"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "The start date to sync data. Leave blank for full sync. Format:\
            \ YYYY-MM-DD."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e094cb9a-26de-4645-8761-65c0c425d1de"
  name: "Stripe"
  dockerRepository: "airbyte/source-stripe"
  dockerImageTag: "0.1.27"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/stripe"
  icon: "stripe.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/stripe"
    connectionSpecification:
      type: "object"
      title: "Stripe Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_secret"
      - "account_id"
      - "start_date"
      properties:
        account_id:
          type: "string"
          order: 0
          title: "Account ID"
          description: "Your Stripe account ID (starts with 'acct_', find yours <a\
            \ href=\"https://dashboard.stripe.com/settings/account\">here</a>)."
        start_date:
          type: "string"
          order: 2
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
        client_secret:
          type: "string"
          order: 1
          title: "Client Secret"
          description: "Stripe API key (usually starts with 'sk_live_'; find yours\
            \ <a href=\"https://dashboard.stripe.com/apikeys\">here</a>)."
          airbyte_secret: true
        lookback_window_days:
          type: "integer"
          order: 3
          title: "Lookback Window (in days)"
          default: 0
          minimum: 0
          description: "When set, the connector will always reload data from the past\
            \ N days, where N is the value set here. This is useful if your data is\
            \ updated after creation."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e2b40e36-aa0e-4bed-b41b-bcea6fa348b1"
  name: "Exchange Rates Api"
  dockerRepository: "airbyte/source-exchange-rates"
  dockerImageTag: "0.2.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/exchangeratesapi"
  icon: "exchangeratesapi.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/exchangeratesapi"
    connectionSpecification:
      type: "object"
      title: "exchangeratesapi.io Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "access_key"
      properties:
        base:
          type: "string"
          examples:
          - "EUR"
          - "USD"
          description: "ISO reference currency. See <a href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\
            >here</a>. Free plan doesn't support Source Currency Switching, default\
            \ base currency is EUR"
        access_key:
          type: "string"
          description: "Your API Access Key. See <a href=\"https://exchangeratesapi.io/documentation/\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
        start_date:
          type: "string"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "YYYY-MM-DD"
          description: "Start getting data from that date."
        ignore_weekends:
          type: "boolean"
          default: true
          description: "Ignore weekends? (Exchanges don't run on weekends)"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e2d65910-8c8b-40a1-ae7d-ee2416b2bfa2"
  name: "Snowflake"
  dockerRepository: "airbyte/source-snowflake"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/snowflake"
  icon: "snowflake.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/snowflake"
    connectionSpecification:
      type: "object"
      title: "Snowflake Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "role"
      - "warehouse"
      - "database"
      - "schema"
      - "username"
      - "password"
      properties:
        host:
          type: "string"
          order: 0
          title: "Account Name"
          examples:
          - "accountname.us-east-2.aws.snowflakecomputing.com"
          description: "The host domain of the snowflake instance (must include the\
            \ account, region, cloud environment, and end with snowflakecomputing.com)."
        role:
          type: "string"
          order: 1
          title: "Role"
          examples:
          - "AIRBYTE_ROLE"
          description: "The role you created for Airbyte to access Snowflake."
        schema:
          type: "string"
          order: 4
          title: "Schema"
          examples:
          - "AIRBYTE_SCHEMA"
          description: "The source Snowflake schema tables."
        database:
          type: "string"
          order: 3
          title: "Database"
          examples:
          - "AIRBYTE_DATABASE"
          description: "The database you created for Airbyte to access data."
        password:
          type: "string"
          order: 6
          title: "Password"
          description: "The password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          order: 5
          title: "Username"
          examples:
          - "AIRBYTE_USER"
          description: "The username you created to allow Airbyte to access the database."
        warehouse:
          type: "string"
          order: 2
          title: "Warehouse"
          examples:
          - "AIRBYTE_WAREHOUSE"
          description: "The warehouse you created for Airbyte to access data."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e55879a8-0ef8-4557-abcf-ab34c53ec460"
  name: "Amazon Seller Partner"
  dockerRepository: "airbyte/source-amazon-seller-partner"
  dockerImageTag: "0.2.11"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-seller-partner"
  icon: "amazonsellerpartner.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amazon-seller-partner"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/amazon-seller-partner"
    connectionSpecification:
      type: "object"
      title: "Amazon Seller Partner Spec"
      required:
      - "replication_start_date"
      - "refresh_token"
      - "lwa_app_id"
      - "lwa_client_secret"
      - "aws_access_key"
      - "aws_secret_key"
      - "role_arn"
      - "aws_environment"
      - "region"
      properties:
        region:
          enum:
          - "AE"
          - "DE"
          - "PL"
          - "EG"
          - "ES"
          - "FR"
          - "IN"
          - "IT"
          - "NL"
          - "SA"
          - "SE"
          - "TR"
          - "UK"
          - "AU"
          - "JP"
          - "SG"
          - "US"
          - "BR"
          - "CA"
          - "MX"
          - "GB"
          type: "string"
          title: "AWSRegion"
          description: "An enumeration."
        role_arn:
          type: "string"
          title: "Role ARN"
          description: "Specifies the Amazon Resource Name (ARN) of an IAM role that\
            \ you want to use to perform operations requested using this profile.\
            \ (Needs permission to 'Assume Role' STS)."
          airbyte_secret: true
        lwa_app_id:
          type: "string"
          title: "LwA App Id"
          description: "Your Login with Amazon App ID"
          airbyte_secret: true
        refresh_token:
          type: "string"
          title: "Refresh Token"
          description: "The Refresh Token obtained via OAuth flow authorization."
          airbyte_secret: true
        aws_access_key:
          type: "string"
          title: "AWS Access Key"
          description: "Specifies the AWS access key used as part of the credentials\
            \ to authenticate the user."
          airbyte_secret: true
        aws_secret_key:
          type: "string"
          title: "AWS Secret Access Key"
          description: "Specifies the AWS secret key used as part of the credentials\
            \ to authenticate the user."
          airbyte_secret: true
        period_in_days:
          type: "integer"
          title: "Period In Days"
          default: 30
          examples:
          - "30"
          - "365"
          description: "Will be used for stream slicing for initial full_refresh sync\
            \ when no updated state is present for reports that support sliced incremental\
            \ sync."
        report_options:
          type: "string"
          title: "Report Options"
          examples:
          - "{\"GET_BRAND_ANALYTICS_SEARCH_TERMS_REPORT\": {\"reportPeriod\": \"WEEK\"\
            }}"
          - "{\"GET_SOME_REPORT\": {\"custom\": \"true\"}}"
          description: "Additional information passed to reports. This varies by report\
            \ type. Must be a valid json string."
        aws_environment:
          enum:
          - "PRODUCTION"
          - "SANDBOX"
          type: "string"
          title: "AWSEnvironment"
          description: "An enumeration."
        max_wait_seconds:
          type: "integer"
          title: "Max wait time for reports (in seconds)"
          default: 500
          examples:
          - "500"
          - "1980"
          description: "Sometimes report can take up to 30 minutes to generate. This\
            \ will set the limit for how long to wait for a successful report."
        lwa_client_secret:
          type: "string"
          title: "LwA Client Secret"
          description: "Your Login with Amazon Client Secret."
          airbyte_secret: true
        replication_start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
      definitions:
        AWSRegion:
          enum:
          - "AE"
          - "DE"
          - "PL"
          - "EG"
          - "ES"
          - "FR"
          - "IN"
          - "IT"
          - "NL"
          - "SA"
          - "SE"
          - "TR"
          - "UK"
          - "AU"
          - "JP"
          - "SG"
          - "US"
          - "BR"
          - "CA"
          - "MX"
          - "GB"
          type: "string"
          title: "AWSRegion"
          description: "An enumeration."
        AWSEnvironment:
          enum:
          - "PRODUCTION"
          - "SANDBOX"
          type: "string"
          title: "AWSEnvironment"
          description: "An enumeration."
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e57c9890-e3ea-4319-be8b-6cbb4d8b40d8"
  name: "Okta (Faros)"
  dockerRepository: "farosai/airbyte-okta-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/okta-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Okta Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "domain_name"
      properties:
        token:
          type: "string"
          title: "Okta Token"
          description: "Access Token for Okta API authentication"
          airbyte_secret: true
        version:
          type: "string"
          title: "API Version"
          default: "v1"
          description: "Okta API Version"
        domain_name:
          type: "string"
          title: "Domain name"
          examples:
          - "dev-12345678"
          description: "Domain name (org name part of your Okta URL)"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e7778cfc-e97c-4458-9ecb-b4f2bba8946c"
  name: "Facebook Marketing"
  dockerRepository: "airbyte/source-facebook-marketing"
  dockerImageTag: "0.2.31"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/facebook-marketing"
  icon: "facebook.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/facebook-marketing"
    changelogUrl: "https://docs.airbyte.io/integrations/sources/facebook-marketing"
    connectionSpecification:
      type: "object"
      title: "Source Facebook Marketing"
      required:
      - "account_id"
      - "access_token"
      - "start_date"
      properties:
        end_date:
          type: "string"
          title: "End Date"
          format: "date-time"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-26T00:00:00Z"
          description: "The date until which you'd like to replicate data for AdCreatives\
            \ and AdInsights APIs, in the format YYYY-MM-DDT00:00:00Z. All data generated\
            \ between start_date and this date will be replicated. Not setting this\
            \ option will result in always syncing the latest data."
        account_id:
          type: "string"
          title: "Account Id"
          description: "The Facebook Ad account ID to use when pulling data from the\
            \ Facebook Marketing API."
        start_date:
          type: "string"
          title: "Start Date"
          format: "date-time"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "The date from which you'd like to replicate data for AdCreatives\
            \ and AdInsights APIs, in the format YYYY-MM-DDT00:00:00Z. All data generated\
            \ after this date will be replicated."
        access_token:
          type: "string"
          title: "Access Token"
          description: "The value of the access token generated. See the <a href=\"\
            https://docs.airbyte.io/integrations/sources/facebook-marketing\">docs</a>\
            \ for more information"
          airbyte_secret: true
        custom_insights:
          type: "array"
          items:
            type: "object"
            title: "InsightConfig"
            required:
            - "name"
            properties:
              name:
                type: "string"
                title: "Name"
                description: "The name value of insight"
              fields:
                type: "array"
                items:
                  type: "string"
                title: "Fields"
                default: []
                description: "A list of chosen fields for fields parameter"
              breakdowns:
                type: "array"
                items:
                  type: "string"
                title: "Breakdowns"
                default: []
                description: "A list of chosen breakdowns for breakdowns"
              action_breakdowns:
                type: "array"
                items:
                  type: "string"
                title: "Action Breakdowns"
                default: []
                description: "A list of chosen action_breakdowns for action_breakdowns"
          title: "Custom Insights"
          description: "A list wich contains insights entries, each entry must have\
            \ a name and can contains fields, breakdowns or action_breakdowns)"
        include_deleted:
          type: "boolean"
          title: "Include Deleted"
          default: false
          description: "Include data from deleted campaigns, ads, and adsets"
        insights_days_per_job:
          type: "integer"
          title: "Insights Days Per Job"
          default: 7
          maximum: 30
          minimum: 1
          description: "Number of days to sync in one job (the more data you have,\
            \ the smaller this parameter should be)"
        fetch_thumbnail_images:
          type: "boolean"
          title: "Fetch Thumbnail Images"
          default: false
          description: "In each Ad Creative, fetch the thumbnail_url and store the\
            \ result in thumbnail_data_url"
        insights_lookback_window:
          type: "integer"
          title: "Insights Lookback Window"
          default: 28
          maximum: 28
          minimum: 0
          description: "The attribution window for the actions"
      definitions:
        InsightConfig:
          type: "object"
          title: "InsightConfig"
          required:
          - "name"
          properties:
            name:
              type: "string"
              title: "Name"
              description: "The name value of insight"
            fields:
              type: "array"
              items:
                type: "string"
              title: "Fields"
              default: []
              description: "A list of chosen fields for fields parameter"
            breakdowns:
              type: "array"
              items:
                type: "string"
              title: "Breakdowns"
              default: []
              description: "A list of chosen breakdowns for breakdowns"
            action_breakdowns:
              type: "array"
              items:
                type: "string"
              title: "Action Breakdowns"
              default: []
              description: "A list of chosen action_breakdowns for action_breakdowns"
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject: []
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "e7eff203-90bf-43e5-a240-19ea3056c474"
  name: "Typeform"
  dockerRepository: "airbyte/source-typeform"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/typeform"
  icon: "typeform.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/typeform"
    connectionSpecification:
      type: "object"
      title: "Typeform Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "token"
      - "start_date"
      properties:
        token:
          type: "string"
          title: "API Token"
          description: "The API Token for a Typeform account."
          airbyte_secret: true
        form_ids:
          type: "array"
          items:
            type: "string"
          title: "Form IDs to replicate"
          description: "When this parameter is set, the connector will replicate data\
            \ only from the input forms. Otherwise, all forms in your Typeform account\
            \ will be replicated. You can find form IDs in your form URLs. For example,\
            \ in the URL \"https://mysite.typeform.com/to/u6nXL7\" the form_id is\
            \ u6nXL7. You can find form URLs on Share panel"
          uniqueItems: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-01-01T00:00:00Z"
          description: "UTC date and time in the format: YYYY-MM-DDTHH:mm:ss[Z]. Any\
            \ data before this date will not be replicated."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "e87ffa8e-a3b5-f69c-9076-6011339de1f6"
  name: "Redshift"
  dockerRepository: "airbyte/source-redshift"
  dockerImageTag: "0.3.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/redshift"
  icon: "redshift.svg"
  sourceType: "database"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/destinations/redshift"
    connectionSpecification:
      type: "object"
      title: "Redshift Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "host"
      - "port"
      - "database"
      - "username"
      - "password"
      properties:
        host:
          type: "string"
          description: "Host Endpoint of the Redshift Cluster (must include the cluster-id,\
            \ region and end with .redshift.amazonaws.com)"
        port:
          type: "integer"
          default: 5439
          maximum: 65536
          minimum: 0
          examples:
          - "5439"
          description: "Port of the database."
        database:
          type: "string"
          examples:
          - "master"
          description: "Name of the database."
        password:
          type: "string"
          description: "Password associated with the username."
          airbyte_secret: true
        username:
          type: "string"
          description: "Username to use to access the database."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "eaf50f04-21dd-4620-913b-2a83f5635227"
  name: "Microsoft teams"
  dockerRepository: "airbyte/source-microsoft-teams"
  dockerImageTag: "0.2.5"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/microsoft-teams"
  icon: "microsoft-teams.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/microsoft-teams"
    connectionSpecification:
      type: "object"
      title: "Microsoft Teams Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "period"
      properties:
        period:
          type: "string"
          title: "Period"
          examples:
          - "D7"
          description: "Specifies the length of time over which the Team Device Report\
            \ stream is aggregated. The supported values are: D7, D30, D90, and D180."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Microsoft (OAuth 2.0)"
            required:
            - "tenant_id"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                enum:
                - "Client"
                type: "string"
                const: "Client"
                order: 0
                default: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Microsoft Teams developer application."
              tenant_id:
                type: "string"
                title: "Directory (tenant) ID"
                description: "A globally unique identifier (GUID) that is different\
                  \ than your organization name or domain. Follow these steps to obtain:\
                  \ open one of the Teams where you belong inside the Teams Application\
                  \ -> Click on the … next to the Team title -> Click on Get link\
                  \ to team -> Copy the link to the team and grab the tenant ID form\
                  \ the URL"
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Microsoft Teams developer\
                  \ application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "A Refresh Token to renew the expired Access Token."
                airbyte_secret: true
            additionalProperties: false
          - type: "object"
            title: "Authenticate via Microsoft"
            required:
            - "tenant_id"
            - "client_id"
            - "client_secret"
            properties:
              auth_type:
                enum:
                - "Token"
                type: "string"
                const: "Token"
                order: 0
                default: "Token"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Microsoft Teams developer application."
              tenant_id:
                type: "string"
                title: "Directory (tenant) ID"
                description: "A globally unique identifier (GUID) that is different\
                  \ than your organization name or domain. Follow these steps to obtain:\
                  \ open one of the Teams where you belong inside the Teams Application\
                  \ -> Click on the … next to the Team title -> Click on Get link\
                  \ to team -> Copy the link to the team and grab the tenant ID form\
                  \ the URL"
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Microsoft Teams developer\
                  \ application."
                airbyte_secret: true
            additionalProperties: false
          title: "Authentication mechanism"
          description: "Choose how to authenticate to Microsoft"
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "auth_type"
      predicate_value: "Client"
      oauth_config_specification:
        oauth_user_input_from_connector_config_specification:
          type: "object"
          properties:
            tenant_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "tenant_id"
          additionalProperties: false
        complete_oauth_output_specification:
          type: "object"
          properties:
            refresh_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "refresh_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
- sourceDefinitionId: "eb4c9e00-db83-4d63-a386-39cfa91012a8"
  name: "Google Search Console"
  dockerRepository: "airbyte/source-google-search-console"
  dockerImageTag: "0.1.11"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/google-search-console"
  icon: "googlesearchconsole.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-search-console"
    connectionSpecification:
      type: "object"
      title: "Google Search Console Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "site_urls"
      - "start_date"
      - "authorization"
      properties:
        end_date:
          type: "string"
          order: 2
          title: "End Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-12-12"
          description: "UTC date in the format 2017-01-25. Any data after this date\
            \ will not be replicated. Must be greater or equal to the Start Date field."
        site_urls:
          type: "array"
          items:
            type: "string"
          order: 0
          title: "Site URLs"
          examples:
          - "https://example1.com"
          - "https://example2.com"
          description: "Website URLs property; do not include the domain-level property\
            \ in the list"
        start_date:
          type: "string"
          order: 1
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          examples:
          - "2021-01-01"
          description: "UTC date in the format 2017-01-25. Any data before this date\
            \ will not be replicated."
        authorization:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Google (Oauth)"
            required:
            - "auth_type"
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                enum:
                - "Client"
                type: "string"
                const: "Client"
                order: 0
                default: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Google Search Console developer\
                  \ application."
                airbyte_secret: true
              access_token:
                type: "string"
                title: "Access Token"
                description: "Access Token for making authenticated requests."
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Google Search Console developer\
                  \ application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "The token for obtaining new access token."
                airbyte_secret: true
          - type: "object"
            title: "Service Account Key Authentication"
            required:
            - "auth_type"
            - "service_account_info"
            - "email"
            properties:
              email:
                type: "string"
                title: "Admin Email"
                description: "The email of the user which has permissions to access\
                  \ the Google Workspace Admin APIs."
              auth_type:
                enum:
                - "Service"
                type: "string"
                const: "Service"
                order: 0
                default: "Service"
              service_account_info:
                type: "string"
                title: "Service Account JSON Key"
                examples:
                - "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID,\
                  \ \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                description: "The JSON key of the service account to use for authorization"
          order: 3
          title: "Authentication Type"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "authorization"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- sourceDefinitionId: "ec4b9503-13cb-48ab-a4ab-6ade4be46567"
  name: "Freshdesk"
  dockerRepository: "airbyte/source-freshdesk"
  dockerImageTag: "0.2.11"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/freshdesk"
  icon: "freshdesk.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/freshdesk"
    connectionSpecification:
      type: "object"
      title: "Freshdesk Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "domain"
      - "api_key"
      properties:
        domain:
          type: "string"
          title: "Domain"
          pattern:
          - "^[a-zA-Z0-9._-]*\\.freshdesk\\.com$"
          examples:
          - "myaccount.freshdesk.com"
          description: "Freshdesk domain"
        api_key:
          type: "string"
          title: "API Key"
          description: "Freshdesk API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/freshdesk\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        start_date:
          title: "Start Date"
          format: "date-time"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2020-12-01T00:00:00Z"
          description: "UTC date and time. Any data created after this date will be\
            \ replicated. If this parameter is not set, all data will be replicated."
        requests_per_minute:
          type: "integer"
          title: "Requests per minute"
          description: "The number of requests per minute that this source allowed\
            \ to use. There is a rate limit of 50 requests per minute per app per\
            \ account."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "eca08d79-7b92-4065-b7f3-79c14836ebe7"
  name: "Freshsales"
  dockerRepository: "airbyte/source-freshsales"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/freshsales"
  icon: "freshsales.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/freshsales"
    connectionSpecification:
      type: "object"
      title: "Freshsales Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "domain_name"
      - "api_key"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: "Freshsales API Key. See <a href=\"https://crmsupport.freshworks.com/support/solutions/articles/50000002503-how-to-find-my-api-key-\"\
            >here</a>. The key is case sensitive."
          airbyte_secret: true
        domain_name:
          type: "string"
          title: "Domain Name"
          examples:
          - "mydomain.myfreshworks.com"
          description: "The Name of your Freshsales domain"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "ed799e2b-2158-4c66-8da4-b40fe63bc72a"
  name: "Plaid"
  dockerRepository: "airbyte/source-plaid"
  dockerImageTag: "0.3.0"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/plaid"
  icon: "plaid.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://plaid.com/docs/api/"
    connectionSpecification:
      type: "object"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "access_token"
      - "api_key"
      - "client_id"
      - "plaid_env"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: "The Plaid API key to use to hit the API."
          airbyte_secret: true
        client_id:
          type: "string"
          title: "Client ID"
          description: "The Plaid client id"
        plaid_env:
          enum:
          - "sandbox"
          - "development"
          - "production"
          type: "string"
          title: "Plaid Environment"
          description: "The Plaid environment"
        access_token:
          type: "string"
          title: "Access Token"
          description: "The end-user's Link access token."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "ed9dfefa-1bbc-419d-8c5e-4d78f0ef6734"
  name: "Google Workspace Admin Reports"
  dockerRepository: "airbyte/source-google-workspace-admin-reports"
  dockerImageTag: "0.1.7"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/google-workspace-admin-reports"
  icon: "googleworkpace.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-workspace-admin-reports"
    connectionSpecification:
      type: "object"
      title: "Google Directory Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "credentials_json"
      - "email"
      properties:
        email:
          type: "string"
          title: "Email"
          description: "The email of the user, who has permissions to access the Google\
            \ Workspace Admin APIs."
        lookback:
          type: "integer"
          title: "Lookback Window in Days"
          maximum: 180
          minimum: 0
          description: "Sets the range of time shown in the report. The maximum value\
            \ allowed by the Google API is 180 days."
        credentials_json:
          type: "string"
          title: "Credentials JSON"
          description: "The contents of the JSON service account key. See the <a href=\"\
            https://developers.google.com/admin-sdk/reports/v1/guides/delegation\"\
            >docs</a> for more information on how to generate this key."
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "ee472a41-b99a-40b3-a671-2a31c3c9c203"
  name: "Google Calendar"
  dockerRepository: "farosai/airbyte-googlecalendar-source"
  dockerImageTag: "0.2.9"
  documentationUrl: "https://github.com/faros-ai/airbyte-connectors/tree/main/sources/googlecalendar-source"
  spec:
    documentationUrl: "https://docs.faros.ai"
    connectionSpecification:
      type: "object"
      title: "Google Calendar Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "client_email"
      - "private_key"
      properties:
        calendar_id:
          type: "string"
          title: "Calendar Id"
          default: "primary"
          description: "Open your [Google Calendar](https://calendar.google.com/calendar)\
            \ app page using your Google account. Navigate to your subscribed/available\
            \ Google calendars list (usually bottom left side). To get to your calendar\
            \ settings, hover over the calendar you wish to work on and click the\
            \ three vertical dots that appear to the right – this will bring up a\
            \ dropdown menu, click Settings and sharing. A new page will open. Find\
            \ the Calendar ID at the bottom under the Integrate Calendar section"
        private_key:
          type: "string"
          title: "Private Key"
          description: "Private Key for accessing Google Calendar API"
          airbyte_secret: true
        client_email:
          type: "string"
          title: "Client Email"
          examples:
          - "https://my-google-calendar-server.example.com"
          description: "Google Calendar API Client Email"
        events_max_results:
          max: 2500
          type: "integer"
          title: "Events Max Results"
          default: 2500
          description: "Maximum number of events returned on one result page. The\
            \ number of events in the resulting page may be less than this value,\
            \ or none at all, even if there are more events matching the query. Incomplete\
            \ pages can be detected by a non-empty nextPageToken field in the response"
        calendars_max_results:
          max: 250
          type: "integer"
          title: "Calendars Max Results"
          default: 250
          description: "Maximum number of entries returned on one result page"
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "ef69ef6e-aa7f-4af1-a01d-ef775033524e"
  name: "GitHub"
  dockerRepository: "airbyte/source-github"
  dockerImageTag: "0.2.19"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/github"
  icon: "github.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/github"
    connectionSpecification:
      type: "object"
      title: "GitHub Source Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "start_date"
      - "repository"
      properties:
        branch:
          type: "string"
          title: "Branch"
          examples:
          - "airbytehq/airbyte/master airbytehq/airbyte/my-branch"
          description: "Space-delimited list of GitHub repository branches to pull\
            \ commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified\
            \ for a repository, the default branch will be pulled."
        repository:
          type: "string"
          title: "GitHub Repositories"
          examples:
          - "airbytehq/airbyte airbytehq/another-repo"
          - "airbytehq/*"
          - "airbytehq/airbyte"
          description: "Space-delimited list of GitHub organizations/repositories,\
            \ e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get\
            \ all repositories from organization and `airbytehq/airbyte airbytehq/another-repo`\
            \ for multiple repositories."
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-03-01T00:00:00Z"
          description: "The date from which you'd like to replicate data for GitHub\
            \ in the format YYYY-MM-DDT00:00:00Z. All data generated after this date\
            \ will be replicated. Note that it will be used only in the following\
            \ incremental streams: comments, commits and issues."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via GitHub (OAuth)"
            required:
            - "access_token"
            properties:
              access_token:
                type: "string"
                title: "Access Token"
                description: "OAuth access token"
                airbyte_secret: true
              option_title:
                type: "string"
                const: "OAuth Credentials"
                title: "Credentials Title"
                description: "OAuth Credentials"
          - type: "object"
            title: "Authenticate with Personal Access Token"
            required:
            - "personal_access_token"
            properties:
              option_title:
                type: "string"
                const: "PAT Credentials"
                title: "Credentials Title"
                description: "PAT Credentials"
              personal_access_token:
                type: "string"
                title: "Personal Access Tokens"
                description: "Log into GitHub and then generate a <a href=\"https://github.com/settings/tokens\"\
                  > personal access token</a>. To load balance your API quota consumption\
                  \ across multiple API tokens, input multiple tokens separated with\
                  \ \",\""
                airbyte_secret: true
          title: "Authentication Mechanism"
          description: "Choose how to authenticate to GitHub"
        page_size_for_large_streams:
          type: "integer"
          title: "Page size for large streams"
          default: 10
          maximum: 100
          minimum: 1
          description: "The Github connector contains several streams with a large\
            \ load. The page size of such streams depends on the size of your repository.\
            \ Recommended to specify values between 10 and 30."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters: []
        oauthFlowOutputParameters:
        - - "access_token"
- sourceDefinitionId: "eff3616a-f9c3-11eb-9a03-0242ac130003"
  name: "Google Analytics"
  dockerRepository: "airbyte/source-google-analytics-v4"
  dockerImageTag: "0.1.14"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/google-analytics-v4"
  icon: "google-analytics.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/google-analytics-v4"
    connectionSpecification:
      type: "object"
      title: "Google Analytics V4 Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "view_id"
      - "start_date"
      properties:
        view_id:
          type: "string"
          order: 2
          title: "View ID"
          description: "The ID for the Google Analytics View you want to fetch data\
            \ from. This can be found from the <a href=\"https://ga-dev-tools.appspot.com/account-explorer/\"\
            >Google Analytics Account Explorer</a>."
        start_date:
          type: "string"
          order: 1
          title: "Start Date"
          examples:
          - "2020-06-01"
          description: "A date in the format YYYY-MM-DD."
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Google (Oauth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                enum:
                - "Client"
                type: "string"
                const: "Client"
                order: 0
                default: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your developer application"
                airbyte_secret: true
              access_token:
                type: "string"
                title: "Access Token"
                description: "A access token generated using the above client ID,\
                  \ secret and refresh_token"
                airbyte_secret: true
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The client secret of your developer application"
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "A refresh token generated using the above client ID\
                  \ and secret"
                airbyte_secret: true
          - type: "object"
            title: "Service Account Key Authentication"
            required:
            - "credentials_json"
            properties:
              auth_type:
                enum:
                - "Service"
                type: "string"
                const: "Service"
                order: 0
                default: "Service"
              credentials_json:
                type: "string"
                examples:
                - "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID,\
                  \ \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                description: "The JSON key of the service account to use for authorization"
                airbyte_secret: true
          order: 0
          title: "Credentials"
        custom_reports:
          type: "string"
          order: 3
          title: "Custom Reports (optional)"
          description: "A JSON array describing the custom reports you want to sync\
            \ from GA. Check out the <a href=\"https://docs.airbyte.io/integrations/sources/google-analytics-v4\"\
            >docs</a> to get more information about this field."
      additionalProperties: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "access_token"
        - - "refresh_token"
- sourceDefinitionId: "f1e4c7f6-db5c-4035-981f-d35ab4998794"
  name: "Zenloop"
  dockerRepository: "airbyte/source-zenloop"
  dockerImageTag: "0.1.1"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/zenloop"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/zenloop"
    connectionSpecification:
      type: "object"
      title: "Zenloop Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_token"
      properties:
        api_token:
          type: "string"
          description: "Zenloop API Token. You can get the API token in settings page\
            \ <a href=\"https://app.zenloop.com/settings/api\">here</a> "
          airbyte_secret: true
        date_from:
          type: "string"
          examples:
          - "2021-10-24T03:30:30Z"
          description: "Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24.\
            \ Leave empty if only data from current data should be synced"
        survey_id:
          type: "string"
          description: "Zenloop Survey ID. Can be found <a href=\"https://app.zenloop.com/settings/api\"\
            >here</a>. Leave empty to pull answers from all surveys"
          airbyte_secret: true
        survey_group_id:
          type: "string"
          description: "Zenloop Survey Group ID. Can be found by pulling All Survey\
            \ Groups via SurveyGroups stream. Leave empty to pull answers from all\
            \ survey groups"
          airbyte_secret: true
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "fa9f58c6-2d03-4237-aaa4-07d75e0c1396"
  name: "Amplitude"
  dockerRepository: "airbyte/source-amplitude"
  dockerImageTag: "0.1.4"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/amplitude"
  icon: "amplitude.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/amplitude"
    connectionSpecification:
      type: "object"
      title: "Amplitude Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "api_key"
      - "secret_key"
      - "start_date"
      properties:
        api_key:
          type: "string"
          title: "API Key"
          description: "Amplitude API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/amplitude\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        secret_key:
          type: "string"
          title: "Secret Key"
          description: "Amplitude Secret Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/amplitude\"\
            >docs</a> for more information on how to obtain this key."
          airbyte_secret: true
        start_date:
          type: "string"
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2021-01-25T00:00:00Z"
          description: "UTC date and time in the format 2021-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "fbb5fbe2-16ad-4cf4-af7d-ff9d9c316c87"
  name: "Sendgrid"
  dockerRepository: "airbyte/source-sendgrid"
  dockerImageTag: "0.2.6"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/sendgrid"
  icon: "sendgrid.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/sendgrid"
    connectionSpecification:
      type: "object"
      title: "Sendgrid Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "apikey"
      properties:
        apikey:
          type: "string"
          description: "API Key, use <a href=\"https://app.sendgrid.com/settings/api_keys/\"\
            >admin</a> to generate this key."
        start_time:
          type: "integer"
          examples:
          - 1558359837
          description: "Start time in timestamp integer format. Any data before this\
            \ timestamp will not be replicated."
      additionalProperties: false
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes: []
- sourceDefinitionId: "fe2b4084-3386-4d3b-9ad6-308f61a6f1e6"
  name: "Harvest"
  dockerRepository: "airbyte/source-harvest"
  dockerImageTag: "0.1.8"
  documentationUrl: "https://docs.airbyte.io/integrations/sources/harvest"
  icon: "harvest.svg"
  sourceType: "api"
  spec:
    documentationUrl: "https://docs.airbyte.io/integrations/sources/harvest"
    connectionSpecification:
      type: "object"
      title: "Harvest Spec"
      $schema: "http://json-schema.org/draft-07/schema#"
      required:
      - "account_id"
      - "replication_start_date"
      properties:
        account_id:
          type: "string"
          order: 0
          title: "Account ID"
          description: "Harvest account ID. Required for all Harvest requests in pair\
            \ with Personal Access Token"
          airbyte_secret: true
        credentials:
          type: "object"
          oneOf:
          - type: "object"
            title: "Authenticate via Harvest (OAuth)"
            required:
            - "client_id"
            - "client_secret"
            - "refresh_token"
            properties:
              auth_type:
                enum:
                - "Client"
                type: "string"
                const: "Client"
                order: 0
                default: "Client"
              client_id:
                type: "string"
                title: "Client ID"
                description: "The Client ID of your Harvest developer application."
              client_secret:
                type: "string"
                title: "Client Secret"
                description: "The Client Secret of your Harvest developer application."
                airbyte_secret: true
              refresh_token:
                type: "string"
                title: "Refresh Token"
                description: "Refresh Token to renew the expired Access Token."
                airbyte_secret: true
            additionalProperties: false
          - type: "object"
            title: "Authenticate with Personal Access Token"
            required:
            - "api_token"
            properties:
              api_token:
                type: "string"
                title: "Personal Access Token"
                description: "Log into Harvest and then create new <a href=\"https://id.getharvest.com/developers\"\
                  > personal access token</a>."
                airbyte_secret: true
              auth_type:
                enum:
                - "Token"
                type: "string"
                const: "Token"
                order: 0
                default: "Token"
            additionalProperties: false
          order: 2
          title: "Authentication mechanism"
          description: "Choose how to authenticate to Harvest."
        replication_start_date:
          type: "string"
          order: 1
          title: "Start Date"
          pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
          examples:
          - "2017-01-25T00:00:00Z"
          description: "UTC date and time in the format 2017-01-25T00:00:00Z. Any\
            \ data before this date will not be replicated."
      additionalProperties: true
    supportsIncremental: true
    supportsNormalization: false
    supportsDBT: false
    supported_destination_sync_modes:
    - "append"
    authSpecification:
      auth_type: "oauth2.0"
      oauth2Specification:
        rootObject:
        - "credentials"
        - "0"
        oauthFlowInitParameters:
        - - "client_id"
        - - "client_secret"
        oauthFlowOutputParameters:
        - - "refresh_token"
    advanced_auth:
      auth_flow_type: "oauth2.0"
      predicate_key:
      - "credentials"
      - "auth_type"
      predicate_value: "Client"
      oauth_config_specification:
        complete_oauth_output_specification:
          type: "object"
          properties:
            refresh_token:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "refresh_token"
          additionalProperties: false
        complete_oauth_server_input_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
            client_secret:
              type: "string"
          additionalProperties: false
        complete_oauth_server_output_specification:
          type: "object"
          properties:
            client_id:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_id"
            client_secret:
              type: "string"
              path_in_connector_config:
              - "credentials"
              - "client_secret"
          additionalProperties: false
